##### Parse Result #####
((*)) AST(function,function) {function((*)) AST(variant,reference var) {{[97]}}(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[98]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#14)((@)) AST(statement,labeled stmt) {[95][36][99] *:* [] ((*)) AST(block) {>>>>>> 0 >>>>>> (#120)((@)) AST(statement,for stmt) {*FOR* (((*)) AST(expression,sequence expr) {[] (null)((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[105]}}}} *=* ((*)) AST(variant,numeric var) {{(I)1}}}} *;* ((*)) AST(expression,binary expr) {[] (null)(PREC=7) ((*)) AST(variant,reference var) {{[105]}} {LT(<)} ((*)) AST(variant,numeric var) {{(I)10}}} *;* ((*)) AST(expression,unary expr) {{SELF_PLUS(++)} [] ((*)) AST(variant,reference var) {{[105]}}} )((*)) AST(block) {>>>>>> 0 >>>>>> (#118)((@)) AST(statement,if-else stmt) {*IF*[] ((*)) AST(expression,binary expr) {[] (null)(PREC=6) ((*)) AST(expression,binary expr) {[] (null)(PREC=10) ((*)) AST(variant,reference var) {{[105]}} {MOD(%)} ((*)) AST(variant,numeric var) {{(I)5}}} {EQUAL_V(==)} ((*)) AST(variant,numeric var) {{(I)0}}}*TRUE_BLOCK*((*)) AST(block) {>>>>>> 0 >>>>>> (#114)((@)) AST(statement,continue stmt) {[] ((*)) AST(variant,reference var) {{[95][36][99]}}} (#114) <<<<<<<<<<< }*FALSE_BLOCK*(null)} (#118) <<<<<<<<<<< }} (#120) <<<<<<<<<<< }} (#14) <<<<<<<<<<< }}
########################
##### Parse Result #####
((*)) AST(function,function) {function((*)) AST(variant,reference var) {{[97]}}(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[98]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#14)((@)) AST(statement,labeled stmt) {[95][36][111][117][116][101][114] *:* [] ((*)) AST(block) {>>>>>> 0 >>>>>> (#267)((@)) AST(statement,for stmt) {*FOR* (((*)) AST(expression,sequence expr) {[] (null)((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[105]}}}} *=* ((*)) AST(variant,numeric var) {{(I)1}}}} *;* ((*)) AST(expression,binary expr) {[] (null)(PREC=7) ((*)) AST(variant,reference var) {{[105]}} {LT(<)} ((*)) AST(variant,numeric var) {{(I)10}}} *;* ((*)) AST(expression,unary expr) {{SELF_PLUS(++)} [] ((*)) AST(variant,reference var) {{[105]}}} )((@)) AST(statement,labeled stmt) {[95][36][105][110][110][101][114] *:* [] ((*)) AST(block) {>>>>>> 0 >>>>>> (#265)((@)) AST(statement,for stmt) {*FOR* (((*)) AST(expression,sequence expr) {[] (null)((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[105]}}}} *=* ((*)) AST(variant,numeric var) {{(I)1}}}} *;* ((*)) AST(expression,binary expr) {[] (null)(PREC=7) ((*)) AST(variant,reference var) {{[105]}} {LT(<)} ((*)) AST(variant,numeric var) {{(I)10}}} *;* ((*)) AST(expression,unary expr) {{SELF_PLUS(++)} [] ((*)) AST(variant,reference var) {{[105]}}} )((*)) AST(block) {>>>>>> 0 >>>>>> (#260)((@)) AST(statement,if-else stmt) {*IF*[] ((*)) AST(expression,binary expr) {[] (null)(PREC=6) ((*)) AST(expression,binary expr) {[] (null)(PREC=10) ((*)) AST(variant,reference var) {{[105]}} {MOD(%)} ((*)) AST(variant,numeric var) {{(I)3}}} {EQUAL_V(==)} ((*)) AST(variant,numeric var) {{(I)0}}}*TRUE_BLOCK*((*)) AST(block) {>>>>>> 0 >>>>>> (#182)((@)) AST(statement,break stmt) {[] ((*)) AST(variant,reference var) {{[95][36][105][110][110][101][114]}}} (#182) <<<<<<<<<<< }*FALSE_BLOCK*((@)) AST(statement,if-else stmt) {*IF*[] ((*)) AST(expression,binary expr) {[] (null)(PREC=6) ((*)) AST(expression,binary expr) {[] (null)(PREC=10) ((*)) AST(variant,reference var) {{[105]}} {MOD(%)} ((*)) AST(variant,numeric var) {{(I)5}}} {EQUAL_V(==)} ((*)) AST(variant,numeric var) {{(I)0}}}*TRUE_BLOCK*((*)) AST(block) {>>>>>> 0 >>>>>> (#252)((@)) AST(statement,break stmt) {[] ((*)) AST(variant,reference var) {{[95][36][111][117][116][101][114]}}} (#252) <<<<<<<<<<< }*FALSE_BLOCK*(null)}} (#260) <<<<<<<<<<< }} (#265) <<<<<<<<<<< }}} (#267) <<<<<<<<<<< }} (#14) <<<<<<<<<<< }}
########################

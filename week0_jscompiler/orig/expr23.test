##### Parse Result #####
((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[116][101][120][116]}}}} *=* ((*)) AST(expression,new expr) {[] ((*)) AST(variant,reference var) {{[80][111][105][110][116][84][101][120][116]}}(((*)) AST(object,general object) {{((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[112][111][115][105][116][105][111][110]}} <:> ((*)) AST(expression,binary expr) {[] (null)(PREC=9) ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[118][105][101][119]}} <.> ((*)) AST(variant,reference var) {{[99][101][110][116][101][114]}}} {PLUS(+)} ((*)) AST(collection) {[((*)) AST(variant,numeric var) {{(I)0}} <,> ((*)) AST(variant,numeric var) {{(I)200}}]}}} <,> ((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[102][105][108][108][67][111][108][111][114]}} <:> ((*)) AST(variant,string var) {{[98][108][97][99][107]}}} <,> ((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[106][117][115][116][105][102][105][99][97][116][105][111][110]}} <:> ((*)) AST(variant,string var) {{[99][101][110][116][101][114]}}} <,> ((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[102][111][110][116][83][105][122][101]}} <:> ((*)) AST(variant,numeric var) {{(I)20}}}}})}}*}((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[111][114][105][103][105][110][97][108][115]}}}} *=* ((*)) AST(expression,new expr) {[] ((*)) AST(variant,reference var) {{[71][114][111][117][112]}}(((*)) AST(object,general object) {{((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[105][110][115][101][114][116]}} <:> ((*)) AST(variant,bool var) {{false}}}}})}}*}((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[115][113][117][97][114][101]}}}} *=* ((*)) AST(expression,new expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[80][97][116][104]}} <.> ((*)) AST(variant,reference var) {{[82][101][99][116][97][110][103][108][101]}}}(((*)) AST(object,general object) {{((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[112][111][115][105][116][105][111][110]}} <:> ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[118][105][101][119]}} <.> ((*)) AST(variant,reference var) {{[99][101][110][116][101][114]}}}} <,> ((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[115][105][122][101]}} <:> ((*)) AST(variant,numeric var) {{(I)300}}} <,> ((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[112][97][114][101][110][116]}} <:> ((*)) AST(variant,reference var) {{[111][114][105][103][105][110][97][108][115]}}} <,> ((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[102][105][108][108][67][111][108][111][114]}} <:> ((*)) AST(variant,string var) {{[119][104][105][116][101]}}}}})}}*}((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[105][110][110][101][114]}}}} *=* ((*)) AST(expression,new expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[80][97][116][104]}} <.> ((*)) AST(variant,reference var) {{[67][105][114][99][108][101]}}}(((*)) AST(object,general object) {{((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[99][101][110][116][101][114]}} <:> ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[118][105][101][119]}} <.> ((*)) AST(variant,reference var) {{[99][101][110][116][101][114]}}}} <,> ((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[114][97][100][105][117][115]}} <:> ((*)) AST(variant,numeric var) {{(I)100}}} <,> ((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[112][97][114][101][110][116]}} <:> ((*)) AST(variant,reference var) {{[111][114][105][103][105][110][97][108][115]}}} <,> ((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[102][105][108][108][67][111][108][111][114]}} <:> ((*)) AST(variant,string var) {{[119][104][105][116][101]}}}}})}}*}((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[111][117][116][101][114]}}}} *=* ((*)) AST(expression,new expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[80][97][116][104]}} <.> ((*)) AST(variant,reference var) {{[67][105][114][99][108][101]}}}(((*)) AST(object,general object) {{((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[99][101][110][116][101][114]}} <:> ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[118][105][101][119]}} <.> ((*)) AST(variant,reference var) {{[99][101][110][116][101][114]}}}} <,> ((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[114][97][100][105][117][115]}} <:> ((*)) AST(variant,numeric var) {{(I)140}}} <,> ((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[112][97][114][101][110][116]}} <:> ((*)) AST(variant,reference var) {{[111][114][105][103][105][110][97][108][115]}}} <,> ((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[102][105][108][108][67][111][108][111][114]}} <:> ((*)) AST(variant,string var) {{[119][104][105][116][101]}}}}})}}*}((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[114][105][110][103]}}}} *=* ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[111][117][116][101][114]}} <.> ((*)) AST(variant,reference var) {{[115][117][98][116][114][97][99][116]}}}(((*)) AST(variant,reference var) {{[105][110][110][101][114]}})}}*}((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[111][112][101][114][97][116][105][111][110][115]}}}} *=* ((*)) AST(collection) {[((*)) AST(variant,string var) {{[117][110][105][116][101]}} <,> ((*)) AST(variant,string var) {{[105][110][116][101][114][115][101][99][116]}} <,> ((*)) AST(variant,string var) {{[115][117][98][116][114][97][99][116]}} <,> ((*)) AST(variant,string var) {{[101][120][99][108][117][100][101]}} <,> ((*)) AST(variant,string var) {{[100][105][118][105][100][101]}}]}}*}((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[99][111][108][111][114][115]}}}} *=* ((*)) AST(collection) {[((*)) AST(variant,string var) {{[114][101][100]}} <,> ((*)) AST(variant,string var) {{[103][114][101][101][110]}} <,> ((*)) AST(variant,string var) {{[98][108][117][101]}} <,> ((*)) AST(variant,string var) {{[98][108][97][99][107]}}]}}*}((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[99][117][114][73][110][100][101][120]}}}} *=* ((*)) AST(expression,unary expr) {{MINUS(-)} [] ((*)) AST(variant,numeric var) {{(I)1}}}}*}((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[111][112][101][114][97][116][105][111][110]}}}}} <,> ((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[114][101][115][117][108][116]}}}}} <,> ((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[97][99][116][105][118][101][73][116][101][109]}}}}}*}((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(variant,reference var) {{[115][101][116][73][110][116][101][114][118][97][108]}}(((*)) AST(variant,reference var) {{[115][101][116][77][111][100][101]}} <,> ((*)) AST(variant,numeric var) {{(I)3000}})}}((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(variant,reference var) {{[115][101][116][77][111][100][101]}}()}}((*)) AST(function,function) {function((*)) AST(variant,reference var) {{[115][101][116][77][111][100][101]}}()((*)) AST(block) {>>>>>> 0 >>>>>> (#966)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,postfix expr) {[] ((*)) AST(variant,reference var) {{[99][117][114][73][110][100][101][120]}}{SELF_PLUS(++)}}} (#966) <<<<<<<<<<< >>>>>> 1 >>>>>> (#966)((@)) AST(statement,if-else stmt) {*IF*[] ((*)) AST(expression,binary expr) {[] (null)(PREC=6) ((*)) AST(variant,reference var) {{[99][117][114][73][110][100][101][120]}} {EQUAL_V(==)} ((*)) AST(expression,binary expr) {[] (null)(PREC=10) ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[111][112][101][114][97][116][105][111][110][115]}} <.> ((*)) AST(variant,reference var) {{[108][101][110][103][116][104]}}} {MULTIPLY(*)} ((*)) AST(variant,numeric var) {{(I)2}}}}*TRUE_BLOCK*((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(variant,reference var) {{[99][117][114][73][110][100][101][120]}}{ASSIGN_EQUAL(=)} {((*)) AST(variant,numeric var) {{(I)0}}}}}*FALSE_BLOCK*(null)}(#966) <<<<<<<<<<< >>>>>> 2 >>>>>> (#966)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(variant,reference var) {{[111][112][101][114][97][116][105][111][110]}}{ASSIGN_EQUAL(=)} {((*)) AST(member ref,runtime member) {[] ((*)) AST(variant,reference var) {{[111][112][101][114][97][116][105][111][110][115]}}[((*)) AST(expression,binary expr) {[] (null)(PREC=10) ((*)) AST(variant,reference var) {{[99][117][114][73][110][100][101][120]}} {MOD(%)} ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[111][112][101][114][97][116][105][111][110][115]}} <.> ((*)) AST(variant,reference var) {{[108][101][110][103][116][104]}}}}]}}}}(#966) <<<<<<<<<<< }}((*)) AST(function,function) {function((*)) AST(variant,reference var) {{[111][110][77][111][117][115][101][68][111][119][110]}}(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[101][118][101][110][116]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#1138)((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[104][105][116][82][101][115][117][108][116]}}}} *=* ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[111][114][105][103][105][110][97][108][115]}} <.> ((*)) AST(variant,reference var) {{[104][105][116][84][101][115][116]}}}(((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[101][118][101][110][116]}} <.> ((*)) AST(variant,reference var) {{[112][111][105][110][116]}}})}}*} (#1138) <<<<<<<<<<< >>>>>> 1 >>>>>> (#1138)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(variant,reference var) {{[97][99][116][105][118][101][73][116][101][109]}}{ASSIGN_EQUAL(=)} {((*)) AST(expression,binary expr) {[] (null)(PREC=2) ((*)) AST(variant,reference var) {{[104][105][116][82][101][115][117][108][116]}} {BOOL_AND(&&)} ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[104][105][116][82][101][115][117][108][116]}} <.> ((*)) AST(variant,reference var) {{[105][116][101][109]}}}}}}}(#1138) <<<<<<<<<<< }}((*)) AST(function,function) {function((*)) AST(variant,reference var) {{[111][110][77][111][117][115][101][68][114][97][103]}}(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[101][118][101][110][116]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#1269)((@)) AST(statement,if-else stmt) {*IF*[] ((*)) AST(variant,reference var) {{[97][99][116][105][118][101][73][116][101][109]}}*TRUE_BLOCK*((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[97][99][116][105][118][101][73][116][101][109]}} <.> ((*)) AST(variant,reference var) {{[112][111][115][105][116][105][111][110]}}}{ASSIGN_EQUAL(=)} {((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[101][118][101][110][116]}} <.> ((*)) AST(variant,reference var) {{[112][111][105][110][116]}}}}}}*FALSE_BLOCK*(null)} (#1269) <<<<<<<<<<< }}((*)) AST(function,function) {function((*)) AST(variant,reference var) {{[111][110][77][111][117][115][101][85][112]}}()((*)) AST(block) {>>>>>> 0 >>>>>> (#1358)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(variant,reference var) {{[97][99][116][105][118][101][73][116][101][109]}}{ASSIGN_EQUAL(=)} {((*)) AST(variant,special var) {{NULL}}}}} (#1358) <<<<<<<<<<< >>>>>> 1 >>>>>> (#1358)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[115][113][117][97][114][101]}} <.> ((*)) AST(variant,reference var) {{[112][111][115][105][116][105][111][110]}}}{ASSIGN_EQUAL(=)} {((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[118][105][101][119]}} <.> ((*)) AST(variant,reference var) {{[99][101][110][116][101][114]}}}}}}(#1358) <<<<<<<<<<< }}((*)) AST(function,function) {function((*)) AST(variant,reference var) {{[111][110][70][114][97][109][101]}}(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[101][118][101][110][116]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#1445)((@)) AST(statement,if-else stmt) {*IF*[] ((*)) AST(expression,binary expr) {[] (null)(PREC=6) ((*)) AST(variant,reference var) {{[97][99][116][105][118][101][73][116][101][109]}} {NOT_EQUAL_V(!=)} ((*)) AST(variant,reference var) {{[114][105][110][103]}}}*TRUE_BLOCK*((*)) AST(block) {>>>>>> 0 >>>>>> (#1720)((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[111][102][102][115][101][116]}}}} *=* ((*)) AST(expression,binary expr) {[] (null)(PREC=10) ((*)) AST(expression,new expr) {[] ((*)) AST(variant,reference var) {{[80][111][105][110][116]}}(((*)) AST(variant,numeric var) {{(I)140}} <,> ((*)) AST(variant,numeric var) {{(I)80}})} {MULTIPLY(*)} ((*)) AST(collection) {[((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[77][97][116][104]}} <.> ((*)) AST(variant,reference var) {{[115][105][110]}}}(((*)) AST(expression,binary expr) {[] (null)(PREC=10) ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[101][118][101][110][116]}} <.> ((*)) AST(variant,reference var) {{[99][111][117][110][116]}}} {DIVIDE(/)} ((*)) AST(variant,numeric var) {{(I)60}}})} <,> ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[77][97][116][104]}} <.> ((*)) AST(variant,reference var) {{[115][105][110]}}}(((*)) AST(expression,binary expr) {[] (null)(PREC=10) ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[101][118][101][110][116]}} <.> ((*)) AST(variant,reference var) {{[99][111][117][110][116]}}} {DIVIDE(/)} ((*)) AST(variant,numeric var) {{(I)40}}})}]}}}*} (#1720) <<<<<<<<<<< >>>>>> 1 >>>>>> (#1720)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[114][105][110][103]}} <.> ((*)) AST(variant,reference var) {{[112][111][115][105][116][105][111][110]}}}{ASSIGN_EQUAL(=)} {((*)) AST(expression,binary expr) {[] (null)(PREC=9) ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[118][105][101][119]}} <.> ((*)) AST(variant,reference var) {{[99][101][110][116][101][114]}}} {PLUS(+)} ((*)) AST(variant,reference var) {{[111][102][102][115][101][116]}}}}}}(#1720) <<<<<<<<<<< }*FALSE_BLOCK*(null)} (#1445) <<<<<<<<<<< >>>>>> 1 >>>>>> (#1445)((@)) AST(statement,if-else stmt) {*IF*[] ((*)) AST(variant,reference var) {{[114][101][115][117][108][116]}}*TRUE_BLOCK*((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[114][101][115][117][108][116]}} <.> ((*)) AST(variant,reference var) {{[114][101][109][111][118][101]}}}()}}*FALSE_BLOCK*(null)}(#1445) <<<<<<<<<<< >>>>>> 2 >>>>>> (#1445)((@)) AST(statement,if-else stmt) {*IF*[] ((*)) AST(expression,binary expr) {[] (null)(PREC=7) ((*)) AST(variant,reference var) {{[99][117][114][73][110][100][101][120]}} {LT(<)} ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[111][112][101][114][97][116][105][111][110][115]}} <.> ((*)) AST(variant,reference var) {{[108][101][110][103][116][104]}}}}*TRUE_BLOCK*((*)) AST(block) {>>>>>> 0 >>>>>> (#1950)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(variant,reference var) {{[114][101][115][117][108][116]}}{ASSIGN_EQUAL(=)} {((*)) AST(expression,call expr) {[] ((*)) AST(member ref,runtime member) {[] ((*)) AST(variant,reference var) {{[115][113][117][97][114][101]}}[((*)) AST(variant,reference var) {{[111][112][101][114][97][116][105][111][110]}}]}(((*)) AST(variant,reference var) {{[114][105][110][103]}})}}}} (#1950) <<<<<<<<<<< >>>>>> 1 >>>>>> (#1950)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[116][101][120][116]}} <.> ((*)) AST(variant,reference var) {{[99][111][110][116][101][110][116]}}}{ASSIGN_EQUAL(=)} {((*)) AST(expression,binary expr) {[] (null)(PREC=9) ((*)) AST(expression,binary expr) {[] (null)(PREC=9) ((*)) AST(variant,string var) {{[115][113][117][97][114][101][46]}} {PLUS(+)} ((*)) AST(variant,reference var) {{[111][112][101][114][97][116][105][111][110]}}} {PLUS(+)} ((*)) AST(variant,string var) {{[40][114][105][110][103][41]}}}}}}(#1950) <<<<<<<<<<< }*FALSE_BLOCK*((*)) AST(block) {>>>>>> 0 >>>>>> (#2066)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(variant,reference var) {{[114][101][115][117][108][116]}}{ASSIGN_EQUAL(=)} {((*)) AST(expression,call expr) {[] ((*)) AST(member ref,runtime member) {[] ((*)) AST(variant,reference var) {{[114][105][110][103]}}[((*)) AST(variant,reference var) {{[111][112][101][114][97][116][105][111][110]}}]}(((*)) AST(variant,reference var) {{[115][113][117][97][114][101]}})}}}} (#2066) <<<<<<<<<<< >>>>>> 1 >>>>>> (#2066)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[116][101][120][116]}} <.> ((*)) AST(variant,reference var) {{[99][111][110][116][101][110][116]}}}{ASSIGN_EQUAL(=)} {((*)) AST(expression,binary expr) {[] (null)(PREC=9) ((*)) AST(expression,binary expr) {[] (null)(PREC=9) ((*)) AST(variant,string var) {{[114][105][110][103][46]}} {PLUS(+)} ((*)) AST(variant,reference var) {{[111][112][101][114][97][116][105][111][110]}}} {PLUS(+)} ((*)) AST(variant,string var) {{[40][115][113][117][97][114][101][41]}}}}}}(#2066) <<<<<<<<<<< }}(#1445) <<<<<<<<<<< >>>>>> 3 >>>>>> (#1445)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[114][101][115][117][108][116]}} <.> ((*)) AST(variant,reference var) {{[115][101][108][101][99][116][101][100]}}}{ASSIGN_EQUAL(=)} {((*)) AST(variant,bool var) {{true}}}}}(#1445) <<<<<<<<<<< >>>>>> 4 >>>>>> (#1445)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[114][101][115][117][108][116]}} <.> ((*)) AST(variant,reference var) {{[102][105][108][108][67][111][108][111][114]}}}{ASSIGN_EQUAL(=)} {((*)) AST(member ref,runtime member) {[] ((*)) AST(variant,reference var) {{[99][111][108][111][114][115]}}[((*)) AST(expression,binary expr) {[] (null)(PREC=10) ((*)) AST(variant,reference var) {{[99][117][114][73][110][100][101][120]}} {MOD(%)} ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[99][111][108][111][114][115]}} <.> ((*)) AST(variant,reference var) {{[108][101][110][103][116][104]}}}}]}}}}(#1445) <<<<<<<<<<< >>>>>> 5 >>>>>> (#1445)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[114][101][115][117][108][116]}} <.> ((*)) AST(variant,reference var) {{[109][111][118][101][66][101][108][111][119]}}}(((*)) AST(variant,reference var) {{[116][101][120][116]}})}}(#1445) <<<<<<<<<<< >>>>>> 6 >>>>>> (#1445)((@)) AST(statement,if-else stmt) {*IF*[] ((*)) AST(expression,binary expr) {[] (null)(PREC=7) ((*)) AST(variant,reference var) {{[114][101][115][117][108][116]}} {INSTANCE_OF} ((*)) AST(variant,reference var) {{[71][114][111][117][112]}}}*TRUE_BLOCK*((*)) AST(block) {>>>>>> 0 >>>>>> (#2413)((@)) AST(statement,for stmt) {*FOR* (((*)) AST(expression,sequence expr) {[] (null)((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[105]}}}} *=* ((*)) AST(variant,numeric var) {{(I)0}}}} *;* ((*)) AST(expression,binary expr) {[] (null)(PREC=7) ((*)) AST(variant,reference var) {{[105]}} {LT(<)} ((*)) AST(member ref,static member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[114][101][115][117][108][116]}} <.> ((*)) AST(variant,reference var) {{[99][104][105][108][100][114][101][110]}}} <.> ((*)) AST(variant,reference var) {{[108][101][110][103][116][104]}}}} *;* ((*)) AST(expression,postfix expr) {[] ((*)) AST(variant,reference var) {{[105]}}{SELF_PLUS(++)}} )((*)) AST(block) {>>>>>> 0 >>>>>> (#2411)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(member ref,runtime member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[114][101][115][117][108][116]}} <.> ((*)) AST(variant,reference var) {{[99][104][105][108][100][114][101][110]}}}[((*)) AST(variant,reference var) {{[105]}}]} <.> ((*)) AST(variant,reference var) {{[102][105][108][108][67][111][108][111][114]}}}{ASSIGN_EQUAL(=)} {((*)) AST(member ref,runtime member) {[] ((*)) AST(variant,reference var) {{[99][111][108][111][114][115]}}[((*)) AST(variant,reference var) {{[105]}}]}}}} (#2411) <<<<<<<<<<< }} (#2413) <<<<<<<<<<< }*FALSE_BLOCK*(null)}(#1445) <<<<<<<<<<< }}((@)) AST(statement,empty stmt) {*;*}((*)) AST(function,function) {function((*)) AST(variant,reference var) {{[111][110][82][101][115][105][122][101]}}()((*)) AST(block) {>>>>>> 0 >>>>>> (#2437)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[116][101][120][116]}} <.> ((*)) AST(variant,reference var) {{[112][111][115][105][116][105][111][110]}}}{ASSIGN_EQUAL(=)} {((*)) AST(expression,binary expr) {[] (null)(PREC=9) ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[118][105][101][119]}} <.> ((*)) AST(variant,reference var) {{[99][101][110][116][101][114]}}} {PLUS(+)} ((*)) AST(collection) {[((*)) AST(variant,numeric var) {{(I)0}} <,> ((*)) AST(variant,numeric var) {{(I)200}}]}}}}} (#2437) <<<<<<<<<<< >>>>>> 1 >>>>>> (#2437)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[115][113][117][97][114][101]}} <.> ((*)) AST(variant,reference var) {{[112][111][115][105][116][105][111][110]}}}{ASSIGN_EQUAL(=)} {((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[118][105][101][119]}} <.> ((*)) AST(variant,reference var) {{[99][101][110][116][101][114]}}}}}}(#2437) <<<<<<<<<<< }}
########################
##### Parse Result #####
((*)) AST(function,function) {function((*)) AST(variant,reference var) {{[66][97][108][108]}}(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[114]}}}} <,> ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[112]}}}} <,> ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[118]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#42)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[114][97][100][105][117][115]}}}{ASSIGN_EQUAL(=)} {((*)) AST(variant,reference var) {{[114]}}}}} (#42) <<<<<<<<<<< >>>>>> 1 >>>>>> (#42)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[112][111][105][110][116]}}}{ASSIGN_EQUAL(=)} {((*)) AST(variant,reference var) {{[112]}}}}}(#42) <<<<<<<<<<< >>>>>> 2 >>>>>> (#42)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[118][101][99][116][111][114]}}}{ASSIGN_EQUAL(=)} {((*)) AST(variant,reference var) {{[118]}}}}}(#42) <<<<<<<<<<< >>>>>> 3 >>>>>> (#42)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[109][97][120][86][101][99]}}}{ASSIGN_EQUAL(=)} {((*)) AST(variant,numeric var) {{(I)15}}}}}(#42) <<<<<<<<<<< >>>>>> 4 >>>>>> (#42)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[110][117][109][83][101][103][109][101][110][116]}}}{ASSIGN_EQUAL(=)} {((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[77][97][116][104]}} <.> ((*)) AST(variant,reference var) {{[102][108][111][111][114]}}}(((*)) AST(expression,binary expr) {[] (null)(PREC=9) ((*)) AST(expression,binary expr) {[] (null)(PREC=10) ((*)) AST(variant,reference var) {{[114]}} {DIVIDE(/)} ((*)) AST(variant,numeric var) {{(I)3}}} {PLUS(+)} ((*)) AST(variant,numeric var) {{(I)2}}})}}}}(#42) <<<<<<<<<<< >>>>>> 5 >>>>>> (#42)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[98][111][117][110][100][79][102][102][115][101][116]}}}{ASSIGN_EQUAL(=)} {((*)) AST(collection) {[]}}}}(#42) <<<<<<<<<<< >>>>>> 6 >>>>>> (#42)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[98][111][117][110][100][79][102][102][115][101][116][66][117][102][102]}}}{ASSIGN_EQUAL(=)} {((*)) AST(collection) {[]}}}}(#42) <<<<<<<<<<< >>>>>> 7 >>>>>> (#42)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[115][105][100][101][80][111][105][110][116][115]}}}{ASSIGN_EQUAL(=)} {((*)) AST(collection) {[]}}}}(#42) <<<<<<<<<<< >>>>>> 8 >>>>>> (#42)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[112][97][116][104]}}}{ASSIGN_EQUAL(=)} {((*)) AST(expression,new expr) {[] ((*)) AST(variant,reference var) {{[80][97][116][104]}}(((*)) AST(object,general object) {{((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[102][105][108][108][67][111][108][111][114]}} <:> ((*)) AST(object,general object) {{((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[104][117][101]}} <:> ((*)) AST(expression,binary expr) {[] (null)(PREC=10) ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[77][97][116][104]}} <.> ((*)) AST(variant,reference var) {{[114][97][110][100][111][109]}}}()} {MULTIPLY(*)} ((*)) AST(variant,numeric var) {{(I)360}}}} <,> ((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[115][97][116][117][114][97][116][105][111][110]}} <:> ((*)) AST(variant,numeric var) {{(I)1}}} <,> ((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[98][114][105][103][104][116][110][101][115][115]}} <:> ((*)) AST(variant,numeric var) {{(I)1}}}}}} <,> ((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[98][108][101][110][100][77][111][100][101]}} <:> ((*)) AST(variant,string var) {{[108][105][103][104][116][101][114]}}}}})}}}}(#42) <<<<<<<<<<< >>>>>> 9 >>>>>> (#42)((@)) AST(statement,for stmt) {*FOR* (((*)) AST(expression,sequence expr) {[] (null)((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[105]}}}} *=* ((*)) AST(variant,numeric var) {{(I)0}}}} *;* ((*)) AST(expression,binary expr) {[] (null)(PREC=7) ((*)) AST(variant,reference var) {{[105]}} {LT(<)} ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[110][117][109][83][101][103][109][101][110][116]}}}} *;* ((*)) AST(expression,postfix expr) {[] ((*)) AST(variant,reference var) {{[105]}}{SELF_PLUS(++)}} )((*)) AST(block) {>>>>>> 0 >>>>>> (#621)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[98][111][117][110][100][79][102][102][115][101][116]}}} <.> ((*)) AST(variant,reference var) {{[112][117][115][104]}}}(((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[114][97][100][105][117][115]}}})}} (#621) <<<<<<<<<<< >>>>>> 1 >>>>>> (#621)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[98][111][117][110][100][79][102][102][115][101][116][66][117][102][102]}}} <.> ((*)) AST(variant,reference var) {{[112][117][115][104]}}}(((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[114][97][100][105][117][115]}}})}}(#621) <<<<<<<<<<< >>>>>> 2 >>>>>> (#621)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[112][97][116][104]}}} <.> ((*)) AST(variant,reference var) {{[97][100][100]}}}(((*)) AST(expression,new expr) {[] ((*)) AST(variant,reference var) {{[80][111][105][110][116]}}()})}}(#621) <<<<<<<<<<< >>>>>> 3 >>>>>> (#621)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[115][105][100][101][80][111][105][110][116][115]}}} <.> ((*)) AST(variant,reference var) {{[112][117][115][104]}}}(((*)) AST(expression,new expr) {[] ((*)) AST(variant,reference var) {{[80][111][105][110][116]}}(((*)) AST(object,general object) {{((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[97][110][103][108][101]}} <:> ((*)) AST(expression,binary expr) {[] (null)(PREC=10) ((*)) AST(expression,binary expr) {[] (null)(PREC=10) ((*)) AST(variant,numeric var) {{(I)360}} {DIVIDE(/)} ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[110][117][109][83][101][103][109][101][110][116]}}}} {MULTIPLY(*)} ((*)) AST(variant,reference var) {{[105]}}}} <,> ((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[108][101][110][103][116][104]}} <:> ((*)) AST(variant,numeric var) {{(I)1}}}}})})}}(#621) <<<<<<<<<<< }}(#42) <<<<<<<<<<< }}((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[66][97][108][108]}} <.> ((*)) AST(variant,reference var) {{[112][114][111][116][111][116][121][112][101]}}}{ASSIGN_EQUAL(=)} {((*)) AST(object,general object) {{((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[105][116][101][114][97][116][101]}} <:> ((*)) AST(function,function) {function()((*)) AST(block) {>>>>>> 0 >>>>>> (#664)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[99][104][101][99][107][66][111][114][100][101][114][115]}}}()}} (#664) <<<<<<<<<<< >>>>>> 1 >>>>>> (#664)((@)) AST(statement,if-else stmt) {*IF*[] ((*)) AST(expression,binary expr) {[] (null)(PREC=7) ((*)) AST(member ref,static member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[118][101][99][116][111][114]}}} <.> ((*)) AST(variant,reference var) {{[108][101][110][103][116][104]}}} {GT(>)} ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[109][97][120][86][101][99]}}}}*TRUE_BLOCK*((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[118][101][99][116][111][114]}}} <.> ((*)) AST(variant,reference var) {{[108][101][110][103][116][104]}}}{ASSIGN_EQUAL(=)} {((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[109][97][120][86][101][99]}}}}}}*FALSE_BLOCK*(null)}(#664) <<<<<<<<<<< >>>>>> 2 >>>>>> (#664)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[112][111][105][110][116]}}}{ASSIGN_PLUS(+=)} {((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[118][101][99][116][111][114]}}}}}}(#664) <<<<<<<<<<< >>>>>> 3 >>>>>> (#664)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[117][112][100][97][116][101][83][104][97][112][101]}}}()}}(#664) <<<<<<<<<<< }}} <,> ((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[99][104][101][99][107][66][111][114][100][101][114][115]}} <:> ((*)) AST(function,function) {function()((*)) AST(block) {>>>>>> 0 >>>>>> (#848)((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[115][105][122][101]}}}} *=* ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[118][105][101][119]}} <.> ((*)) AST(variant,reference var) {{[115][105][122][101]}}}}*} (#848) <<<<<<<<<<< >>>>>> 1 >>>>>> (#848)((@)) AST(statement,if-else stmt) {*IF*[] ((*)) AST(expression,binary expr) {[] (null)(PREC=7) ((*)) AST(member ref,static member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[112][111][105][110][116]}}} <.> ((*)) AST(variant,reference var) {{[120]}}} {LT(<)} ((*)) AST(expression,unary expr) {{MINUS(-)} [] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[114][97][100][105][117][115]}}}}}*TRUE_BLOCK*((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[112][111][105][110][116]}}} <.> ((*)) AST(variant,reference var) {{[120]}}}{ASSIGN_EQUAL(=)} {((*)) AST(expression,binary expr) {[] (null)(PREC=9) ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[115][105][122][101]}} <.> ((*)) AST(variant,reference var) {{[119][105][100][116][104]}}} {PLUS(+)} ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[114][97][100][105][117][115]}}}}}}}*FALSE_BLOCK*(null)}(#848) <<<<<<<<<<< >>>>>> 2 >>>>>> (#848)((@)) AST(statement,if-else stmt) {*IF*[] ((*)) AST(expression,binary expr) {[] (null)(PREC=7) ((*)) AST(member ref,static member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[112][111][105][110][116]}}} <.> ((*)) AST(variant,reference var) {{[120]}}} {GT(>)} ((*)) AST(expression,binary expr) {[] (null)(PREC=9) ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[115][105][122][101]}} <.> ((*)) AST(variant,reference var) {{[119][105][100][116][104]}}} {PLUS(+)} ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[114][97][100][105][117][115]}}}}}*TRUE_BLOCK*((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[112][111][105][110][116]}}} <.> ((*)) AST(variant,reference var) {{[120]}}}{ASSIGN_EQUAL(=)} {((*)) AST(expression,unary expr) {{MINUS(-)} [] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[114][97][100][105][117][115]}}}}}}}*FALSE_BLOCK*(null)}(#848) <<<<<<<<<<< >>>>>> 3 >>>>>> (#848)((@)) AST(statement,if-else stmt) {*IF*[] ((*)) AST(expression,binary expr) {[] (null)(PREC=7) ((*)) AST(member ref,static member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[112][111][105][110][116]}}} <.> ((*)) AST(variant,reference var) {{[121]}}} {LT(<)} ((*)) AST(expression,unary expr) {{MINUS(-)} [] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[114][97][100][105][117][115]}}}}}*TRUE_BLOCK*((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[112][111][105][110][116]}}} <.> ((*)) AST(variant,reference var) {{[121]}}}{ASSIGN_EQUAL(=)} {((*)) AST(expression,binary expr) {[] (null)(PREC=9) ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[115][105][122][101]}} <.> ((*)) AST(variant,reference var) {{[104][101][105][103][104][116]}}} {PLUS(+)} ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[114][97][100][105][117][115]}}}}}}}*FALSE_BLOCK*(null)}(#848) <<<<<<<<<<< >>>>>> 4 >>>>>> (#848)((@)) AST(statement,if-else stmt) {*IF*[] ((*)) AST(expression,binary expr) {[] (null)(PREC=7) ((*)) AST(member ref,static member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[112][111][105][110][116]}}} <.> ((*)) AST(variant,reference var) {{[121]}}} {GT(>)} ((*)) AST(expression,binary expr) {[] (null)(PREC=9) ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[115][105][122][101]}} <.> ((*)) AST(variant,reference var) {{[104][101][105][103][104][116]}}} {PLUS(+)} ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[114][97][100][105][117][115]}}}}}*TRUE_BLOCK*((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[112][111][105][110][116]}}} <.> ((*)) AST(variant,reference var) {{[121]}}}{ASSIGN_EQUAL(=)} {((*)) AST(expression,unary expr) {{MINUS(-)} [] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[114][97][100][105][117][115]}}}}}}}*FALSE_BLOCK*(null)}(#848) <<<<<<<<<<< }}} <,> ((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[117][112][100][97][116][101][83][104][97][112][101]}} <:> ((*)) AST(function,function) {function()((*)) AST(block) {>>>>>> 0 >>>>>> (#1222)((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[115][101][103][109][101][110][116][115]}}}} *=* ((*)) AST(member ref,static member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[112][97][116][104]}}} <.> ((*)) AST(variant,reference var) {{[115][101][103][109][101][110][116][115]}}}}*} (#1222) <<<<<<<<<<< >>>>>> 1 >>>>>> (#1222)((@)) AST(statement,for stmt) {*FOR* (((*)) AST(expression,sequence expr) {[] (null)((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[105]}}}} *=* ((*)) AST(variant,numeric var) {{(I)0}}}} *;* ((*)) AST(expression,binary expr) {[] (null)(PREC=7) ((*)) AST(variant,reference var) {{[105]}} {LT(<)} ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[110][117][109][83][101][103][109][101][110][116]}}}} *;* ((*)) AST(expression,postfix expr) {[] ((*)) AST(variant,reference var) {{[105]}}{SELF_PLUS(++)}} )((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(member ref,runtime member) {[] ((*)) AST(variant,reference var) {{[115][101][103][109][101][110][116][115]}}[((*)) AST(variant,reference var) {{[105]}}]} <.> ((*)) AST(variant,reference var) {{[112][111][105][110][116]}}}{ASSIGN_EQUAL(=)} {((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[103][101][116][83][105][100][101][80][111][105][110][116]}}}(((*)) AST(variant,reference var) {{[105]}})}}}}}(#1222) <<<<<<<<<<< >>>>>> 2 >>>>>> (#1222)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[112][97][116][104]}}} <.> ((*)) AST(variant,reference var) {{[115][109][111][111][116][104]}}}()}}(#1222) <<<<<<<<<<< >>>>>> 3 >>>>>> (#1222)((@)) AST(statement,for stmt) {*FOR* (((*)) AST(expression,sequence expr) {[] (null)((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[105]}}}} *=* ((*)) AST(variant,numeric var) {{(I)0}}}} *;* ((*)) AST(expression,binary expr) {[] (null)(PREC=7) ((*)) AST(variant,reference var) {{[105]}} {LT(<)} ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[110][117][109][83][101][103][109][101][110][116]}}}} *;* ((*)) AST(expression,postfix expr) {[] ((*)) AST(variant,reference var) {{[105]}}{SELF_PLUS(++)}} )((*)) AST(block) {>>>>>> 0 >>>>>> (#1830)((@)) AST(statement,if-else stmt) {*IF*[] ((*)) AST(expression,binary expr) {[] (null)(PREC=7) ((*)) AST(member ref,runtime member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[98][111][117][110][100][79][102][102][115][101][116]}}}[((*)) AST(variant,reference var) {{[105]}}]} {LT(<)} ((*)) AST(expression,binary expr) {[] (null)(PREC=10) ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[114][97][100][105][117][115]}}} {DIVIDE(/)} ((*)) AST(variant,numeric var) {{(I)4}}}}*TRUE_BLOCK*((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,runtime member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[98][111][117][110][100][79][102][102][115][101][116]}}}[((*)) AST(variant,reference var) {{[105]}}]}{ASSIGN_EQUAL(=)} {((*)) AST(expression,binary expr) {[] (null)(PREC=10) ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[114][97][100][105][117][115]}}} {DIVIDE(/)} ((*)) AST(variant,numeric var) {{(I)4}}}}}}*FALSE_BLOCK*(null)} (#1830) <<<<<<<<<<< >>>>>> 1 >>>>>> (#1830)((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[110][101][120][116]}}}} *=* ((*)) AST(expression,binary expr) {[] (null)(PREC=10) ((*)) AST(expression,binary expr) {[] (null)(PREC=9) ((*)) AST(variant,reference var) {{[105]}} {PLUS(+)} ((*)) AST(variant,numeric var) {{(I)1}}} {MOD(%)} ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[110][117][109][83][101][103][109][101][110][116]}}}}}*}(#1830) <<<<<<<<<<< >>>>>> 2 >>>>>> (#1830)((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[112][114][101][118]}}}} *=* ((*)) AST(expression,conditional expr) {[] ((*)) AST(expression,binary expr) {[] (null)(PREC=7) ((*)) AST(variant,reference var) {{[105]}} {GT(>)} ((*)) AST(variant,numeric var) {{(I)0}}} <?> ((*)) AST(expression,binary expr) {[] (null)(PREC=9) ((*)) AST(variant,reference var) {{[105]}} {MINUS(-)} ((*)) AST(variant,numeric var) {{(I)1}}} <:> ((*)) AST(expression,binary expr) {[] (null)(PREC=9) ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[110][117][109][83][101][103][109][101][110][116]}}} {MINUS(-)} ((*)) AST(variant,numeric var) {{(I)1}}}}}*}(#1830) <<<<<<<<<<< >>>>>> 3 >>>>>> (#1830)((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[111][102][102][115][101][116]}}}} *=* ((*)) AST(member ref,runtime member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[98][111][117][110][100][79][102][102][115][101][116]}}}[((*)) AST(variant,reference var) {{[105]}}]}}*}(#1830) <<<<<<<<<<< >>>>>> 4 >>>>>> (#1830)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(variant,reference var) {{[111][102][102][115][101][116]}}{ASSIGN_PLUS(+=)} {((*)) AST(expression,binary expr) {[] (null)(PREC=10) ((*)) AST(expression,binary expr) {[] (null)(PREC=9) ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[114][97][100][105][117][115]}}} {MINUS(-)} ((*)) AST(variant,reference var) {{[111][102][102][115][101][116]}}} {DIVIDE(/)} ((*)) AST(variant,numeric var) {{(I)15}}}}}}(#1830) <<<<<<<<<<< >>>>>> 5 >>>>>> (#1830)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(variant,reference var) {{[111][102][102][115][101][116]}}{ASSIGN_PLUS(+=)} {((*)) AST(expression,binary expr) {[] (null)(PREC=10) ((*)) AST(expression,binary expr) {[] (null)(PREC=9) ((*)) AST(expression,binary expr) {[] (null)(PREC=10) ((*)) AST(expression,binary expr) {[] (null)(PREC=9) ((*)) AST(member ref,runtime member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[98][111][117][110][100][79][102][102][115][101][116]}}}[((*)) AST(variant,reference var) {{[110][101][120][116]}}]} {PLUS(+)} ((*)) AST(member ref,runtime member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[98][111][117][110][100][79][102][102][115][101][116]}}}[((*)) AST(variant,reference var) {{[112][114][101][118]}}]}} {DIVIDE(/)} ((*)) AST(variant,numeric var) {{(I)2}}} {MINUS(-)} ((*)) AST(variant,reference var) {{[111][102][102][115][101][116]}}} {DIVIDE(/)} ((*)) AST(variant,numeric var) {{(I)3}}}}}}(#1830) <<<<<<<<<<< >>>>>> 6 >>>>>> (#1830)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,runtime member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[98][111][117][110][100][79][102][102][115][101][116][66][117][102][102]}}}[((*)) AST(variant,reference var) {{[105]}}]}{ASSIGN_EQUAL(=)} {((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,runtime member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[98][111][117][110][100][79][102][102][115][101][116]}}}[((*)) AST(variant,reference var) {{[105]}}]}{ASSIGN_EQUAL(=)} {((*)) AST(variant,reference var) {{[111][102][102][115][101][116]}}}}}}}(#1830) <<<<<<<<<<< }}(#1222) <<<<<<<<<<< }}} <,> ((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[114][101][97][99][116]}} <:> ((*)) AST(function,function) {function(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[98]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#1854)((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[100][105][115][116]}}}} *=* ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[112][111][105][110][116]}}} <.> ((*)) AST(variant,reference var) {{[103][101][116][68][105][115][116][97][110][99][101]}}}(((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[98]}} <.> ((*)) AST(variant,reference var) {{[112][111][105][110][116]}}})}}*} (#1854) <<<<<<<<<<< >>>>>> 1 >>>>>> (#1854)((@)) AST(statement,if-else stmt) {*IF*[] ((*)) AST(expression,binary expr) {[] (null)(PREC=2) ((*)) AST(expression,binary expr) {[] (null)(PREC=7) ((*)) AST(variant,reference var) {{[100][105][115][116]}} {LT(<)} ((*)) AST(expression,binary expr) {[] (null)(PREC=9) ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[114][97][100][105][117][115]}}} {PLUS(+)} ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[98]}} <.> ((*)) AST(variant,reference var) {{[114][97][100][105][117][115]}}}}} {BOOL_AND(&&)} ((*)) AST(expression,binary expr) {[] (null)(PREC=6) ((*)) AST(variant,reference var) {{[100][105][115][116]}} {NOT_EQUAL_V(!=)} ((*)) AST(variant,numeric var) {{(I)0}}}}*TRUE_BLOCK*((*)) AST(block) {>>>>>> 0 >>>>>> (#2212)((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[111][118][101][114][108][97][112]}}}} *=* ((*)) AST(expression,binary expr) {[] (null)(PREC=9) ((*)) AST(expression,binary expr) {[] (null)(PREC=9) ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[114][97][100][105][117][115]}}} {PLUS(+)} ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[98]}} <.> ((*)) AST(variant,reference var) {{[114][97][100][105][117][115]}}}} {MINUS(-)} ((*)) AST(variant,reference var) {{[100][105][115][116]}}}}*} (#2212) <<<<<<<<<<< >>>>>> 1 >>>>>> (#2212)((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[100][105][114][101][99]}}}} *=* ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(expression,binary expr) {[] (null)(PREC=9) ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[112][111][105][110][116]}}} {MINUS(-)} ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[98]}} <.> ((*)) AST(variant,reference var) {{[112][111][105][110][116]}}}} <.> ((*)) AST(variant,reference var) {{[110][111][114][109][97][108][105][122][101]}}}(((*)) AST(expression,binary expr) {[] (null)(PREC=10) ((*)) AST(variant,reference var) {{[111][118][101][114][108][97][112]}} {MULTIPLY(*)} ((*)) AST(variant,numeric var) {{(R)0.015}}})}}*}(#2212) <<<<<<<<<<< >>>>>> 2 >>>>>> (#2212)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[118][101][99][116][111][114]}}}{ASSIGN_PLUS(+=)} {((*)) AST(variant,reference var) {{[100][105][114][101][99]}}}}}(#2212) <<<<<<<<<<< >>>>>> 3 >>>>>> (#2212)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[98]}} <.> ((*)) AST(variant,reference var) {{[118][101][99][116][111][114]}}}{ASSIGN_MINUS(-=)} {((*)) AST(variant,reference var) {{[100][105][114][101][99]}}}}}(#2212) <<<<<<<<<<< >>>>>> 4 >>>>>> (#2212)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[99][97][108][99][66][111][117][110][100][115]}}}(((*)) AST(variant,reference var) {{[98]}})}}(#2212) <<<<<<<<<<< >>>>>> 5 >>>>>> (#2212)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[98]}} <.> ((*)) AST(variant,reference var) {{[99][97][108][99][66][111][117][110][100][115]}}}(((*)) AST(variant,special var) {{this}})}}(#2212) <<<<<<<<<<< >>>>>> 6 >>>>>> (#2212)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[117][112][100][97][116][101][66][111][117][110][100][115]}}}()}}(#2212) <<<<<<<<<<< >>>>>> 7 >>>>>> (#2212)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[98]}} <.> ((*)) AST(variant,reference var) {{[117][112][100][97][116][101][66][111][117][110][100][115]}}}()}}(#2212) <<<<<<<<<<< }*FALSE_BLOCK*(null)}(#1854) <<<<<<<<<<< }}} <,> ((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[103][101][116][66][111][117][110][100][79][102][102][115][101][116]}} <:> ((*)) AST(function,function) {function(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[98]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#2245)((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[100][105][102][102]}}}} *=* ((*)) AST(expression,binary expr) {[] (null)(PREC=9) ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[112][111][105][110][116]}}} {MINUS(-)} ((*)) AST(variant,reference var) {{[98]}}}}*} (#2245) <<<<<<<<<<< >>>>>> 1 >>>>>> (#2245)((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[97][110][103][108][101]}}}} *=* ((*)) AST(expression,binary expr) {[] (null)(PREC=10) ((*)) AST(expression,binary expr) {[] (null)(PREC=9) ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[100][105][102][102]}} <.> ((*)) AST(variant,reference var) {{[97][110][103][108][101]}}} {PLUS(+)} ((*)) AST(variant,numeric var) {{(I)180}}} {MOD(%)} ((*)) AST(variant,numeric var) {{(I)360}}}}*}(#2245) <<<<<<<<<<< >>>>>> 2 >>>>>> (#2245)((@)) AST(statement,return stmt) {*RETURN*[] ((*)) AST(member ref,runtime member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[98][111][117][110][100][79][102][102][115][101][116]}}}[((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[77][97][116][104]}} <.> ((*)) AST(variant,reference var) {{[102][108][111][111][114]}}}(((*)) AST(expression,binary expr) {[] (null)(PREC=10) ((*)) AST(expression,binary expr) {[] (null)(PREC=10) ((*)) AST(variant,reference var) {{[97][110][103][108][101]}} {DIVIDE(/)} ((*)) AST(variant,numeric var) {{(I)360}}} {MULTIPLY(*)} ((*)) AST(member ref,static member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[98][111][117][110][100][79][102][102][115][101][116]}}} <.> ((*)) AST(variant,reference var) {{[108][101][110][103][116][104]}}}})}]}}(#2245) <<<<<<<<<<< }}} <,> ((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[99][97][108][99][66][111][117][110][100][115]}} <:> ((*)) AST(function,function) {function(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[98]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#2424)((@)) AST(statement,for stmt) {*FOR* (((*)) AST(expression,sequence expr) {[] (null)((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[105]}}}} *=* ((*)) AST(variant,numeric var) {{(I)0}}}} *;* ((*)) AST(expression,binary expr) {[] (null)(PREC=7) ((*)) AST(variant,reference var) {{[105]}} {LT(<)} ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[110][117][109][83][101][103][109][101][110][116]}}}} *;* ((*)) AST(expression,postfix expr) {[] ((*)) AST(variant,reference var) {{[105]}}{SELF_PLUS(++)}} )((*)) AST(block) {>>>>>> 0 >>>>>> (#2659)((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[116][112]}}}} *=* ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[103][101][116][83][105][100][101][80][111][105][110][116]}}}(((*)) AST(variant,reference var) {{[105]}})}}*} (#2659) <<<<<<<<<<< >>>>>> 1 >>>>>> (#2659)((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[98][76][101][110]}}}} *=* ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[98]}} <.> ((*)) AST(variant,reference var) {{[103][101][116][66][111][117][110][100][79][102][102][115][101][116]}}}(((*)) AST(variant,reference var) {{[116][112]}})}}*}(#2659) <<<<<<<<<<< >>>>>> 2 >>>>>> (#2659)((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[116][100]}}}} *=* ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[116][112]}} <.> ((*)) AST(variant,reference var) {{[103][101][116][68][105][115][116][97][110][99][101]}}}(((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[98]}} <.> ((*)) AST(variant,reference var) {{[112][111][105][110][116]}}})}}*}(#2659) <<<<<<<<<<< >>>>>> 3 >>>>>> (#2659)((@)) AST(statement,if-else stmt) {*IF*[] ((*)) AST(expression,binary expr) {[] (null)(PREC=7) ((*)) AST(variant,reference var) {{[116][100]}} {LT(<)} ((*)) AST(variant,reference var) {{[98][76][101][110]}}}*TRUE_BLOCK*((*)) AST(block) {>>>>>> 0 >>>>>> (#2656)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,runtime member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[98][111][117][110][100][79][102][102][115][101][116][66][117][102][102]}}}[((*)) AST(variant,reference var) {{[105]}}]}{ASSIGN_MINUS(-=)} {((*)) AST(expression,binary expr) {[] (null)(PREC=10) ((*)) AST(expression,binary expr) {[] (null)(PREC=9) ((*)) AST(variant,reference var) {{[98][76][101][110]}} {MINUS(-)} ((*)) AST(variant,reference var) {{[116][100]}}} {DIVIDE(/)} ((*)) AST(variant,numeric var) {{(I)2}}}}}} (#2656) <<<<<<<<<<< }*FALSE_BLOCK*(null)}(#2659) <<<<<<<<<<< }} (#2424) <<<<<<<<<<< }}} <,> ((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[103][101][116][83][105][100][101][80][111][105][110][116]}} <:> ((*)) AST(function,function) {function(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[105][110][100][101][120]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#2694)((@)) AST(statement,return stmt) {*RETURN*[] ((*)) AST(expression,binary expr) {[] (null)(PREC=9) ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[112][111][105][110][116]}}} {PLUS(+)} ((*)) AST(expression,binary expr) {[] (null)(PREC=10) ((*)) AST(member ref,runtime member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[115][105][100][101][80][111][105][110][116][115]}}}[((*)) AST(variant,reference var) {{[105][110][100][101][120]}}]} {MULTIPLY(*)} ((*)) AST(member ref,runtime member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[98][111][117][110][100][79][102][102][115][101][116]}}}[((*)) AST(variant,reference var) {{[105][110][100][101][120]}}]}}}} (#2694) <<<<<<<<<<< }}} <,> ((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[117][112][100][97][116][101][66][111][117][110][100][115]}} <:> ((*)) AST(function,function) {function()((*)) AST(block) {>>>>>> 0 >>>>>> (#2799)((@)) AST(statement,for stmt) {*FOR* (((*)) AST(expression,sequence expr) {[] (null)((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[105]}}}} *=* ((*)) AST(variant,numeric var) {{(I)0}}}} *;* ((*)) AST(expression,binary expr) {[] (null)(PREC=7) ((*)) AST(variant,reference var) {{[105]}} {LT(<)} ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[110][117][109][83][101][103][109][101][110][116]}}}} *;* ((*)) AST(expression,postfix expr) {[] ((*)) AST(variant,reference var) {{[105]}}{SELF_PLUS(++)}} )((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,runtime member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[98][111][117][110][100][79][102][102][115][101][116]}}}[((*)) AST(variant,reference var) {{[105]}}]}{ASSIGN_EQUAL(=)} {((*)) AST(member ref,runtime member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[98][111][117][110][100][79][102][102][115][101][116][66][117][102][102]}}}[((*)) AST(variant,reference var) {{[105]}}]}}}}} (#2799) <<<<<<<<<<< }}}}}}}}((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[98][97][108][108][115]}}}} *=* ((*)) AST(collection) {[]}}*}((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[110][117][109][66][97][108][108][115]}}}} *=* ((*)) AST(variant,numeric var) {{(I)18}}}*}((@)) AST(statement,for stmt) {*FOR* (((*)) AST(expression,sequence expr) {[] (null)((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[105]}}}} *=* ((*)) AST(variant,numeric var) {{(I)0}}}} *;* ((*)) AST(expression,binary expr) {[] (null)(PREC=7) ((*)) AST(variant,reference var) {{[105]}} {LT(<)} ((*)) AST(variant,reference var) {{[110][117][109][66][97][108][108][115]}}} *;* ((*)) AST(expression,postfix expr) {[] ((*)) AST(variant,reference var) {{[105]}}{SELF_PLUS(++)}} )((*)) AST(block) {>>>>>> 0 >>>>>> (#3252)((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[112][111][115][105][116][105][111][110]}}}} *=* ((*)) AST(expression,binary expr) {[] (null)(PREC=10) ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[80][111][105][110][116]}} <.> ((*)) AST(variant,reference var) {{[114][97][110][100][111][109]}}}()} {MULTIPLY(*)} ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[118][105][101][119]}} <.> ((*)) AST(variant,reference var) {{[115][105][122][101]}}}}}*} (#3252) <<<<<<<<<<< >>>>>> 1 >>>>>> (#3252)((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[118][101][99][116][111][114]}}}} *=* ((*)) AST(expression,new expr) {[] ((*)) AST(variant,reference var) {{[80][111][105][110][116]}}(((*)) AST(object,general object) {{((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[97][110][103][108][101]}} <:> ((*)) AST(expression,binary expr) {[] (null)(PREC=10) ((*)) AST(variant,numeric var) {{(I)360}} {MULTIPLY(*)} ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[77][97][116][104]}} <.> ((*)) AST(variant,reference var) {{[114][97][110][100][111][109]}}}()}}} <,> ((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[108][101][110][103][116][104]}} <:> ((*)) AST(expression,binary expr) {[] (null)(PREC=10) ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[77][97][116][104]}} <.> ((*)) AST(variant,reference var) {{[114][97][110][100][111][109]}}}()} {MULTIPLY(*)} ((*)) AST(variant,numeric var) {{(I)10}}}}}})}}*}(#3252) <<<<<<<<<<< >>>>>> 2 >>>>>> (#3252)((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[114][97][100][105][117][115]}}}} *=* ((*)) AST(expression,binary expr) {[] (null)(PREC=9) ((*)) AST(expression,binary expr) {[] (null)(PREC=10) ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[77][97][116][104]}} <.> ((*)) AST(variant,reference var) {{[114][97][110][100][111][109]}}}()} {MULTIPLY(*)} ((*)) AST(variant,numeric var) {{(I)60}}} {PLUS(+)} ((*)) AST(variant,numeric var) {{(I)60}}}}*}(#3252) <<<<<<<<<<< >>>>>> 3 >>>>>> (#3252)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[98][97][108][108][115]}} <.> ((*)) AST(variant,reference var) {{[112][117][115][104]}}}(((*)) AST(expression,new expr) {[] ((*)) AST(variant,reference var) {{[66][97][108][108]}}(((*)) AST(variant,reference var) {{[114][97][100][105][117][115]}} <,> ((*)) AST(variant,reference var) {{[112][111][115][105][116][105][111][110]}} <,> ((*)) AST(variant,reference var) {{[118][101][99][116][111][114]}})})}}(#3252) <<<<<<<<<<< }}((*)) AST(function,function) {function((*)) AST(variant,reference var) {{[111][110][70][114][97][109][101]}}()((*)) AST(block) {>>>>>> 0 >>>>>> (#3271)((@)) AST(statement,for stmt) {*FOR* (((*)) AST(expression,sequence expr) {[] (null)((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[105]}}}} *=* ((*)) AST(variant,numeric var) {{(I)0}}}} *;* ((*)) AST(expression,binary expr) {[] (null)(PREC=7) ((*)) AST(variant,reference var) {{[105]}} {LT(<)} ((*)) AST(expression,binary expr) {[] (null)(PREC=9) ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[98][97][108][108][115]}} <.> ((*)) AST(variant,reference var) {{[108][101][110][103][116][104]}}} {MINUS(-)} ((*)) AST(variant,numeric var) {{(I)1}}}} *;* ((*)) AST(expression,postfix expr) {[] ((*)) AST(variant,reference var) {{[105]}}{SELF_PLUS(++)}} )((*)) AST(block) {>>>>>> 0 >>>>>> (#3403)((@)) AST(statement,for stmt) {*FOR* (((*)) AST(expression,sequence expr) {[] (null)((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[106]}}}} *=* ((*)) AST(expression,binary expr) {[] (null)(PREC=9) ((*)) AST(variant,reference var) {{[105]}} {PLUS(+)} ((*)) AST(variant,numeric var) {{(I)1}}}}} *;* ((*)) AST(expression,binary expr) {[] (null)(PREC=7) ((*)) AST(variant,reference var) {{[106]}} {LT(<)} ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[98][97][108][108][115]}} <.> ((*)) AST(variant,reference var) {{[108][101][110][103][116][104]}}}} *;* ((*)) AST(expression,postfix expr) {[] ((*)) AST(variant,reference var) {{[106]}}{SELF_PLUS(++)}} )((*)) AST(block) {>>>>>> 0 >>>>>> (#3400)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(member ref,runtime member) {[] ((*)) AST(variant,reference var) {{[98][97][108][108][115]}}[((*)) AST(variant,reference var) {{[105]}}]} <.> ((*)) AST(variant,reference var) {{[114][101][97][99][116]}}}(((*)) AST(member ref,runtime member) {[] ((*)) AST(variant,reference var) {{[98][97][108][108][115]}}[((*)) AST(variant,reference var) {{[106]}}]})}} (#3400) <<<<<<<<<<< }} (#3403) <<<<<<<<<<< }} (#3271) <<<<<<<<<<< >>>>>> 1 >>>>>> (#3271)((@)) AST(statement,for stmt) {*FOR* (((*)) AST(expression,sequence expr) {[] (null)((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[105]}}}} *=* ((*)) AST(variant,numeric var) {{(I)0}}} <,> ((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[108]}}}} *=* ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[98][97][108][108][115]}} <.> ((*)) AST(variant,reference var) {{[108][101][110][103][116][104]}}}}} *;* ((*)) AST(expression,binary expr) {[] (null)(PREC=7) ((*)) AST(variant,reference var) {{[105]}} {LT(<)} ((*)) AST(variant,reference var) {{[108]}}} *;* ((*)) AST(expression,postfix expr) {[] ((*)) AST(variant,reference var) {{[105]}}{SELF_PLUS(++)}} )((*)) AST(block) {>>>>>> 0 >>>>>> (#3476)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(member ref,runtime member) {[] ((*)) AST(variant,reference var) {{[98][97][108][108][115]}}[((*)) AST(variant,reference var) {{[105]}}]} <.> ((*)) AST(variant,reference var) {{[105][116][101][114][97][116][101]}}}()}} (#3476) <<<<<<<<<<< }}(#3271) <<<<<<<<<<< }}
########################
##### Parse Result #####
((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[108][101][102][116][80][97][116][104]}}}} *=* ((*)) AST(expression,new expr) {[] ((*)) AST(variant,reference var) {{[80][97][116][104]}}(((*)) AST(object,general object) {{((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[115][116][114][111][107][101][67][111][108][111][114]}} <:> ((*)) AST(variant,string var) {{[114][101][100]}}} <,> ((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[111][112][97][99][105][116][121]}} <:> ((*)) AST(variant,numeric var) {{(R)0.5}}}}})}}*}((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[114][105][103][104][116][80][97][116][104]}}}} *=* ((*)) AST(expression,new expr) {[] ((*)) AST(variant,reference var) {{[80][97][116][104]}}(((*)) AST(object,general object) {{((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[115][116][114][111][107][101][67][111][108][111][114]}} <:> ((*)) AST(variant,string var) {{[103][114][101][101][110]}}} <,> ((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[111][112][97][99][105][116][121]}} <:> ((*)) AST(variant,numeric var) {{(R)0.5}}}}})}}*}((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[97][109][111][117][110][116]}}}} *=* ((*)) AST(variant,numeric var) {{(I)8}}}*}((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[115][116][101][112]}}}} *=* ((*)) AST(expression,binary expr) {[] (null)(PREC=10) ((*)) AST(member ref,static member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[118][105][101][119]}} <.> ((*)) AST(variant,reference var) {{[115][105][122][101]}}} <.> ((*)) AST(variant,reference var) {{[119][105][100][116][104]}}} {DIVIDE(/)} ((*)) AST(expression,binary expr) {[] (null)(PREC=9) ((*)) AST(variant,reference var) {{[97][109][111][117][110][116]}} {PLUS(+)} ((*)) AST(variant,numeric var) {{(I)1}}}}}*}((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[102][108][105][112]}}}} *=* ((*)) AST(variant,bool var) {{true}}}*}((@)) AST(statement,for stmt) {*FOR* (((*)) AST(expression,sequence expr) {[] (null)((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[105]}}}} *=* ((*)) AST(variant,numeric var) {{(I)0}}}} *;* ((*)) AST(expression,binary expr) {[] (null)(PREC=7) ((*)) AST(variant,reference var) {{[105]}} {LTE(<=)} ((*)) AST(variant,reference var) {{[97][109][111][117][110][116]}}} *;* ((*)) AST(expression,postfix expr) {[] ((*)) AST(variant,reference var) {{[105]}}{SELF_PLUS(++)}} )((*)) AST(block) {>>>>>> 0 >>>>>> (#333)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[108][101][102][116][80][97][116][104]}} <.> ((*)) AST(variant,reference var) {{[97][100][100]}}}(((*)) AST(expression,new expr) {[] ((*)) AST(variant,reference var) {{[80][111][105][110][116]}}(((*)) AST(expression,binary expr) {[] (null)(PREC=10) ((*)) AST(variant,reference var) {{[105]}} {MULTIPLY(*)} ((*)) AST(variant,reference var) {{[115][116][101][112]}}} <,> ((*)) AST(variant,numeric var) {{(I)0}})})}} (#333) <<<<<<<<<<< >>>>>> 1 >>>>>> (#333)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[114][105][103][104][116][80][97][116][104]}} <.> ((*)) AST(variant,reference var) {{[97][100][100]}}}(((*)) AST(expression,new expr) {[] ((*)) AST(variant,reference var) {{[80][111][105][110][116]}}(((*)) AST(expression,binary expr) {[] (null)(PREC=10) ((*)) AST(variant,reference var) {{[105]}} {MULTIPLY(*)} ((*)) AST(variant,reference var) {{[115][116][101][112]}}} <,> ((*)) AST(variant,numeric var) {{(I)0}})})}}(#333) <<<<<<<<<<< }}((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[103][114][111][117][112]}}}} *=* ((*)) AST(expression,new expr) {[] ((*)) AST(variant,reference var) {{[71][114][111][117][112]}}(((*)) AST(object,general object) {{((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[99][104][105][108][100][114][101][110]}} <:> ((*)) AST(collection) {[((*)) AST(variant,reference var) {{[108][101][102][116][80][97][116][104]}} <,> ((*)) AST(variant,reference var) {{[114][105][103][104][116][80][97][116][104]}}]}} <,> ((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[116][114][97][110][115][102][111][114][109][67][111][110][116][101][110][116]}} <:> ((*)) AST(variant,bool var) {{false}}} <,> ((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[115][116][114][111][107][101][87][105][100][116][104]}} <:> ((*)) AST(variant,numeric var) {{(I)30}}} <,> ((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[115][116][114][111][107][101][74][111][105][110]}} <:> ((*)) AST(variant,string var) {{[114][111][117][110][100]}}} <,> ((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[115][116][114][111][107][101][67][97][112]}} <:> ((*)) AST(variant,string var) {{[98][117][116][116]}}} <,> ((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[112][105][118][111][116]}} <:> ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[108][101][102][116][80][97][116][104]}} <.> ((*)) AST(variant,reference var) {{[112][111][115][105][116][105][111][110]}}}} <,> ((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[112][111][115][105][116][105][111][110]}} <:> ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[118][105][101][119]}} <.> ((*)) AST(variant,reference var) {{[99][101][110][116][101][114]}}}}}})}}*}((*)) AST(function,function) {function((*)) AST(variant,reference var) {{[111][110][77][111][117][115][101][68][111][119][110]}}()((*)) AST(block) {>>>>>> 0 >>>>>> (#555)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(variant,reference var) {{[102][108][105][112]}}{ASSIGN_EQUAL(=)} {((*)) AST(expression,unary expr) {{BOOL_NOT(!)} [] ((*)) AST(variant,reference var) {{[102][108][105][112]}}}}}} (#555) <<<<<<<<<<< }}((*)) AST(function,function) {function((*)) AST(variant,reference var) {{[111][110][75][101][121][68][111][119][110]}}(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[101][118][101][110][116]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#601)((@)) AST(statement,if-else stmt) {*IF*[] ((*)) AST(expression,binary expr) {[] (null)(PREC=6) ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[101][118][101][110][116]}} <.> ((*)) AST(variant,reference var) {{[107][101][121]}}} {EQUAL_VT(===)} ((*)) AST(variant,string var) {{[115][112][97][99][101]}}}*TRUE_BLOCK*((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[103][114][111][117][112]}} <.> ((*)) AST(variant,reference var) {{[102][117][108][108][121][83][101][108][101][99][116][101][100]}}}{ASSIGN_EQUAL(=)} {((*)) AST(expression,unary expr) {{BOOL_NOT(!)} [] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[103][114][111][117][112]}} <.> ((*)) AST(variant,reference var) {{[102][117][108][108][121][83][101][108][101][99][116][101][100]}}}}}}}*FALSE_BLOCK*(null)} (#601) <<<<<<<<<<< }}((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[97][117][100][105][111]}}}}} <,> ((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[115][111][117][114][99][101]}}}}} <,> ((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[97][110][97][108][121][115][101][114][76]}}}}} <,> ((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[97][110][97][108][121][115][101][114][82]}}}}} <,> ((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[102][114][101][113][66][121][116][101][68][97][116][97]}}}}}*}((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[118][105][101][119]}} <.> ((*)) AST(variant,reference var) {{[111][110][70][114][97][109][101]}}}{ASSIGN_EQUAL(=)} {((*)) AST(function,function) {function()((*)) AST(block) {>>>>>> 0 >>>>>> (#762)((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[115][116][101][112]}}}} *=* ((*)) AST(expression,binary expr) {[] (null)(PREC=10) ((*)) AST(member ref,static member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[118][105][101][119]}} <.> ((*)) AST(variant,reference var) {{[115][105][122][101]}}} <.> ((*)) AST(variant,reference var) {{[119][105][100][116][104]}}} {DIVIDE(/)} ((*)) AST(expression,binary expr) {[] (null)(PREC=9) ((*)) AST(variant,reference var) {{[97][109][111][117][110][116]}} {PLUS(+)} ((*)) AST(variant,numeric var) {{(I)1}}}}}*} (#762) <<<<<<<<<<< >>>>>> 1 >>>>>> (#762)((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[115][99][97][108][101]}}}} *=* ((*)) AST(expression,binary expr) {[] (null)(PREC=10) ((*)) AST(member ref,static member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[118][105][101][119]}} <.> ((*)) AST(variant,reference var) {{[115][105][122][101]}}} <.> ((*)) AST(variant,reference var) {{[104][101][105][103][104][116]}}} {DIVIDE(/)} ((*)) AST(variant,numeric var) {{(R)1.75}}}}*}(#762) <<<<<<<<<<< >>>>>> 2 >>>>>> (#762)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[97][110][97][108][121][115][101][114][76]}} <.> ((*)) AST(variant,reference var) {{[103][101][116][66][121][116][101][70][114][101][113][117][101][110][99][121][68][97][116][97]}}}(((*)) AST(variant,reference var) {{[102][114][101][113][66][121][116][101][68][97][116][97]}})}}(#762) <<<<<<<<<<< >>>>>> 3 >>>>>> (#762)((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[108][101][102][116][66][97][110][100][115]}}}} *=* ((*)) AST(expression,call expr) {[] ((*)) AST(variant,reference var) {{[103][101][116][69][113][117][97][108][105][122][101][114][66][97][110][100][115]}}(((*)) AST(variant,reference var) {{[102][114][101][113][66][121][116][101][68][97][116][97]}} <,> ((*)) AST(variant,bool var) {{true}})}}*}(#762) <<<<<<<<<<< >>>>>> 4 >>>>>> (#762)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[97][110][97][108][121][115][101][114][82]}} <.> ((*)) AST(variant,reference var) {{[103][101][116][66][121][116][101][70][114][101][113][117][101][110][99][121][68][97][116][97]}}}(((*)) AST(variant,reference var) {{[102][114][101][113][66][121][116][101][68][97][116][97]}})}}(#762) <<<<<<<<<<< >>>>>> 5 >>>>>> (#762)((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[114][105][103][104][116][66][97][110][100][115]}}}} *=* ((*)) AST(expression,call expr) {[] ((*)) AST(variant,reference var) {{[103][101][116][69][113][117][97][108][105][122][101][114][66][97][110][100][115]}}(((*)) AST(variant,reference var) {{[102][114][101][113][66][121][116][101][68][97][116][97]}} <,> ((*)) AST(variant,bool var) {{true}})}}*}(#762) <<<<<<<<<<< >>>>>> 6 >>>>>> (#762)((@)) AST(statement,for stmt) {*FOR* (((*)) AST(expression,sequence expr) {[] (null)((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[105]}}}} *=* ((*)) AST(variant,numeric var) {{(I)1}}}} *;* ((*)) AST(expression,binary expr) {[] (null)(PREC=7) ((*)) AST(variant,reference var) {{[105]}} {LTE(<=)} ((*)) AST(variant,reference var) {{[97][109][111][117][110][116]}}} *;* ((*)) AST(expression,postfix expr) {[] ((*)) AST(variant,reference var) {{[105]}}{SELF_PLUS(++)}} )((*)) AST(block) {>>>>>> 0 >>>>>> (#1254)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(member ref,runtime member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[108][101][102][116][80][97][116][104]}} <.> ((*)) AST(variant,reference var) {{[115][101][103][109][101][110][116][115]}}}[((*)) AST(variant,reference var) {{[105]}}]} <.> ((*)) AST(variant,reference var) {{[112][111][105][110][116]}}}{ASSIGN_EQUAL(=)} {((*)) AST(collection) {[((*)) AST(expression,binary expr) {[] (null)(PREC=10) ((*)) AST(variant,reference var) {{[105]}} {MULTIPLY(*)} ((*)) AST(variant,reference var) {{[115][116][101][112]}}} <,> ((*)) AST(expression,binary expr) {[] (null)(PREC=10) ((*)) AST(expression,unary expr) {{MINUS(-)} [] ((*)) AST(member ref,runtime member) {[] ((*)) AST(variant,reference var) {{[108][101][102][116][66][97][110][100][115]}}[((*)) AST(expression,binary expr) {[] (null)(PREC=9) ((*)) AST(variant,reference var) {{[105]}} {MINUS(-)} ((*)) AST(variant,numeric var) {{(I)1}}}]}} {MULTIPLY(*)} ((*)) AST(variant,reference var) {{[115][99][97][108][101]}}}]}}}} (#1254) <<<<<<<<<<< >>>>>> 1 >>>>>> (#1254)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(member ref,runtime member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[114][105][103][104][116][80][97][116][104]}} <.> ((*)) AST(variant,reference var) {{[115][101][103][109][101][110][116][115]}}}[((*)) AST(variant,reference var) {{[105]}}]} <.> ((*)) AST(variant,reference var) {{[112][111][105][110][116]}}}{ASSIGN_EQUAL(=)} {((*)) AST(collection) {[((*)) AST(expression,binary expr) {[] (null)(PREC=10) ((*)) AST(variant,reference var) {{[105]}} {MULTIPLY(*)} ((*)) AST(variant,reference var) {{[115][116][101][112]}}} <,> ((*)) AST(expression,binary expr) {[] (null)(PREC=10) ((*)) AST(expression,binary expr) {[] (null)(PREC=10) ((*)) AST(expression,unary expr) {{MINUS(-)} [] ((*)) AST(member ref,runtime member) {[] ((*)) AST(variant,reference var) {{[114][105][103][104][116][66][97][110][100][115]}}[((*)) AST(expression,binary expr) {[] (null)(PREC=9) ((*)) AST(variant,reference var) {{[105]}} {MINUS(-)} ((*)) AST(variant,numeric var) {{(I)1}}}]}} {MULTIPLY(*)} ((*)) AST(variant,reference var) {{[115][99][97][108][101]}}} {MULTIPLY(*)} ((*)) AST(expression,conditional expr) {[] ((*)) AST(variant,reference var) {{[102][108][105][112]}} <?> ((*)) AST(expression,unary expr) {{MINUS(-)} [] ((*)) AST(variant,numeric var) {{(I)1}}} <:> ((*)) AST(variant,numeric var) {{(I)1}}}}]}}}}(#1254) <<<<<<<<<<< }}(#762) <<<<<<<<<<< >>>>>> 7 >>>>>> (#762)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[108][101][102][116][80][97][116][104]}} <.> ((*)) AST(variant,reference var) {{[115][109][111][111][116][104]}}}()}}(#762) <<<<<<<<<<< >>>>>> 8 >>>>>> (#762)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[114][105][103][104][116][80][97][116][104]}} <.> ((*)) AST(variant,reference var) {{[115][109][111][111][116][104]}}}()}}(#762) <<<<<<<<<<< >>>>>> 9 >>>>>> (#762)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[103][114][111][117][112]}} <.> ((*)) AST(variant,reference var) {{[112][105][118][111][116]}}}{ASSIGN_EQUAL(=)} {((*)) AST(collection) {[((*)) AST(member ref,static member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[108][101][102][116][80][97][116][104]}} <.> ((*)) AST(variant,reference var) {{[112][111][115][105][116][105][111][110]}}} <.> ((*)) AST(variant,reference var) {{[120]}}} <,> ((*)) AST(variant,numeric var) {{(I)0}}]}}}}(#762) <<<<<<<<<<< >>>>>> 10 >>>>>> (#762)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[103][114][111][117][112]}} <.> ((*)) AST(variant,reference var) {{[112][111][115][105][116][105][111][110]}}}{ASSIGN_EQUAL(=)} {((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[118][105][101][119]}} <.> ((*)) AST(variant,reference var) {{[99][101][110][116][101][114]}}}}}}(#762) <<<<<<<<<<< }}}}}((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[118][105][101][119]}} <.> ((*)) AST(variant,reference var) {{[112][97][117][115][101]}}}()}}((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[65][117][100][105][111][67][111][110][116][101][120][116]}}}} *=* ((*)) AST(expression,binary expr) {[] (null)(PREC=1) ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[119][105][110][100][111][119]}} <.> ((*)) AST(variant,reference var) {{[65][117][100][105][111][67][111][110][116][101][120][116]}}} {BOOL_OR(||)} ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[119][105][110][100][111][119]}} <.> ((*)) AST(variant,reference var) {{[119][101][98][107][105][116][65][117][100][105][111][67][111][110][116][101][120][116]}}}}}*}((@)) AST(statement,if-else stmt) {*IF*[] ((*)) AST(variant,reference var) {{[65][117][100][105][111][67][111][110][116][101][120][116]}}*TRUE_BLOCK*((*)) AST(block) {>>>>>> 0 >>>>>> (#2401)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(variant,reference var) {{[97][117][100][105][111]}}{ASSIGN_EQUAL(=)} {((*)) AST(expression,new expr) {[] ((*)) AST(variant,reference var) {{[65][117][100][105][111][67][111][110][116][101][120][116]}}()}}}} (#2401) <<<<<<<<<<< >>>>>> 1 >>>>>> (#2401)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(variant,reference var) {{[115][111][117][114][99][101]}}{ASSIGN_EQUAL(=)} {((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[97][117][100][105][111]}} <.> ((*)) AST(variant,reference var) {{[99][114][101][97][116][101][66][117][102][102][101][114][83][111][117][114][99][101]}}}()}}}}(#2401) <<<<<<<<<<< >>>>>> 2 >>>>>> (#2401)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(variant,reference var) {{[97][110][97][108][121][115][101][114][76]}}{ASSIGN_EQUAL(=)} {((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[97][117][100][105][111]}} <.> ((*)) AST(variant,reference var) {{[99][114][101][97][116][101][65][110][97][108][121][115][101][114]}}}()}}}}(#2401) <<<<<<<<<<< >>>>>> 3 >>>>>> (#2401)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[97][110][97][108][121][115][101][114][76]}} <.> ((*)) AST(variant,reference var) {{[115][109][111][111][116][104][105][110][103][84][105][109][101][67][111][110][115][116][97][110][116]}}}{ASSIGN_EQUAL(=)} {((*)) AST(variant,numeric var) {{(R)0.25}}}}}(#2401) <<<<<<<<<<< >>>>>> 4 >>>>>> (#2401)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[97][110][97][108][121][115][101][114][76]}} <.> ((*)) AST(variant,reference var) {{[102][102][116][83][105][122][101]}}}{ASSIGN_EQUAL(=)} {((*)) AST(expression,binary expr) {[] (null)(PREC=10) ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[77][97][116][104]}} <.> ((*)) AST(variant,reference var) {{[112][111][119]}}}(((*)) AST(variant,numeric var) {{(I)2}} <,> ((*)) AST(variant,reference var) {{[97][109][111][117][110][116]}})} {MULTIPLY(*)} ((*)) AST(variant,numeric var) {{(I)2}}}}}}(#2401) <<<<<<<<<<< >>>>>> 5 >>>>>> (#2401)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(variant,reference var) {{[97][110][97][108][121][115][101][114][82]}}{ASSIGN_EQUAL(=)} {((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[97][117][100][105][111]}} <.> ((*)) AST(variant,reference var) {{[99][114][101][97][116][101][65][110][97][108][121][115][101][114]}}}()}}}}(#2401) <<<<<<<<<<< >>>>>> 6 >>>>>> (#2401)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[97][110][97][108][121][115][101][114][82]}} <.> ((*)) AST(variant,reference var) {{[115][109][111][111][116][104][105][110][103][84][105][109][101][67][111][110][115][116][97][110][116]}}}{ASSIGN_EQUAL(=)} {((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[97][110][97][108][121][115][101][114][76]}} <.> ((*)) AST(variant,reference var) {{[115][109][111][111][116][104][105][110][103][84][105][109][101][67][111][110][115][116][97][110][116]}}}}}}(#2401) <<<<<<<<<<< >>>>>> 7 >>>>>> (#2401)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[97][110][97][108][121][115][101][114][82]}} <.> ((*)) AST(variant,reference var) {{[102][102][116][83][105][122][101]}}}{ASSIGN_EQUAL(=)} {((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[97][110][97][108][121][115][101][114][76]}} <.> ((*)) AST(variant,reference var) {{[102][102][116][83][105][122][101]}}}}}}(#2401) <<<<<<<<<<< >>>>>> 8 >>>>>> (#2401)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(variant,reference var) {{[102][114][101][113][66][121][116][101][68][97][116][97]}}{ASSIGN_EQUAL(=)} {((*)) AST(expression,new expr) {[] ((*)) AST(variant,reference var) {{[85][105][110][116][56][65][114][114][97][121]}}(((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[97][110][97][108][121][115][101][114][76]}} <.> ((*)) AST(variant,reference var) {{[102][114][101][113][117][101][110][99][121][66][105][110][67][111][117][110][116]}}})}}}}(#2401) <<<<<<<<<<< >>>>>> 9 >>>>>> (#2401)((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[115][112][108][105][116][116][101][114]}}}} *=* ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[97][117][100][105][111]}} <.> ((*)) AST(variant,reference var) {{[99][114][101][97][116][101][67][104][97][110][110][101][108][83][112][108][105][116][116][101][114]}}}()}}*}(#2401) <<<<<<<<<<< >>>>>> 10 >>>>>> (#2401)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[115][111][117][114][99][101]}} <.> ((*)) AST(variant,reference var) {{[99][111][110][110][101][99][116]}}}(((*)) AST(variant,reference var) {{[115][112][108][105][116][116][101][114]}})}}(#2401) <<<<<<<<<<< >>>>>> 11 >>>>>> (#2401)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[115][112][108][105][116][116][101][114]}} <.> ((*)) AST(variant,reference var) {{[99][111][110][110][101][99][116]}}}(((*)) AST(variant,reference var) {{[97][110][97][108][121][115][101][114][76]}} <,> ((*)) AST(variant,numeric var) {{(I)0}} <,> ((*)) AST(variant,numeric var) {{(I)0}})}}(#2401) <<<<<<<<<<< >>>>>> 12 >>>>>> (#2401)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[115][112][108][105][116][116][101][114]}} <.> ((*)) AST(variant,reference var) {{[99][111][110][110][101][99][116]}}}(((*)) AST(variant,reference var) {{[97][110][97][108][121][115][101][114][82]}} <,> ((*)) AST(variant,numeric var) {{(I)1}} <,> ((*)) AST(variant,numeric var) {{(I)0}})}}(#2401) <<<<<<<<<<< >>>>>> 13 >>>>>> (#2401)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[115][111][117][114][99][101]}} <.> ((*)) AST(variant,reference var) {{[99][111][110][110][101][99][116]}}}(((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[97][117][100][105][111]}} <.> ((*)) AST(variant,reference var) {{[100][101][115][116][105][110][97][116][105][111][110]}}})}}(#2401) <<<<<<<<<<< >>>>>> 14 >>>>>> (#2401)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(variant,reference var) {{[108][111][97][100][65][117][100][105][111][66][117][102][102][101][114]}}(((*)) AST(variant,string var) {{[104][116][116][112][58][47][47][97][115][115][101][116][115][46][112][97][112][101][114][106][115][46][111][114][103][47][97][117][100][105][111][47][103][110][111][115][115][105][101][110][110][101][46][109][112][51]}})}}(#2401) <<<<<<<<<<< }*FALSE_BLOCK*((*)) AST(block) {>>>>>> 0 >>>>>> (#2472)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(variant,reference var) {{[97][108][101][114][116]}}(((*)) AST(variant,string var) {{[65][117][100][105][111][32][110][111][116][32][115][117][112][112][111][114][116][101][100]}})}} (#2472) <<<<<<<<<<< }}((*)) AST(function,function) {function((*)) AST(variant,reference var) {{[108][111][97][100][65][117][100][105][111][66][117][102][102][101][114]}}(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[117][114][108]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#2502)((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[114][101][113][117][101][115][116]}}}} *=* ((*)) AST(expression,new expr) {[] ((*)) AST(variant,reference var) {{[88][77][76][72][116][116][112][82][101][113][117][101][115][116]}}()}}*} (#2502) <<<<<<<<<<< >>>>>> 1 >>>>>> (#2502)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[114][101][113][117][101][115][116]}} <.> ((*)) AST(variant,reference var) {{[111][112][101][110]}}}(((*)) AST(variant,string var) {{[71][69][84]}} <,> ((*)) AST(variant,reference var) {{[117][114][108]}} <,> ((*)) AST(variant,bool var) {{true}})}}(#2502) <<<<<<<<<<< >>>>>> 2 >>>>>> (#2502)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[114][101][113][117][101][115][116]}} <.> ((*)) AST(variant,reference var) {{[114][101][115][112][111][110][115][101][84][121][112][101]}}}{ASSIGN_EQUAL(=)} {((*)) AST(variant,string var) {{[97][114][114][97][121][98][117][102][102][101][114]}}}}}(#2502) <<<<<<<<<<< >>>>>> 3 >>>>>> (#2502)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[114][101][113][117][101][115][116]}} <.> ((*)) AST(variant,reference var) {{[111][110][108][111][97][100]}}}{ASSIGN_EQUAL(=)} {((*)) AST(function,function) {function()((*)) AST(block) {>>>>>> 0 >>>>>> (#2667)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[97][117][100][105][111]}} <.> ((*)) AST(variant,reference var) {{[100][101][99][111][100][101][65][117][100][105][111][68][97][116][97]}}}(((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[114][101][113][117][101][115][116]}} <.> ((*)) AST(variant,reference var) {{[114][101][115][112][111][110][115][101]}}} <,> ((*)) AST(function,function) {function(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[98][117][102][102][101][114]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#2736)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[115][111][117][114][99][101]}} <.> ((*)) AST(variant,reference var) {{[98][117][102][102][101][114]}}}{ASSIGN_EQUAL(=)} {((*)) AST(variant,reference var) {{[98][117][102][102][101][114]}}}}} (#2736) <<<<<<<<<<< >>>>>> 1 >>>>>> (#2736)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[115][111][117][114][99][101]}} <.> ((*)) AST(variant,reference var) {{[108][111][111][112]}}}{ASSIGN_EQUAL(=)} {((*)) AST(variant,bool var) {{true}}}}}(#2736) <<<<<<<<<<< >>>>>> 2 >>>>>> (#2736)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[115][111][117][114][99][101]}} <.> ((*)) AST(variant,reference var) {{[115][116][97][114][116]}}}(((*)) AST(variant,numeric var) {{(I)0}})}}(#2736) <<<<<<<<<<< >>>>>> 3 >>>>>> (#2736)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[118][105][101][119]}} <.> ((*)) AST(variant,reference var) {{[112][108][97][121]}}}()}}(#2736) <<<<<<<<<<< }} <,> ((*)) AST(function,function) {function(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[98][117][102][102][101][114]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#2858)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(variant,reference var) {{[97][108][101][114][116]}}(((*)) AST(variant,string var) {{[69][114][114][111][114][32][108][111][97][100][105][110][103][32][77][80][51]}})}} (#2858) <<<<<<<<<<< }})}} (#2667) <<<<<<<<<<< }}}}}(#2502) <<<<<<<<<<< >>>>>> 4 >>>>>> (#2502)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[114][101][113][117][101][115][116]}} <.> ((*)) AST(variant,reference var) {{[115][101][110][100]}}}()}}(#2502) <<<<<<<<<<< }}((*)) AST(function,function) {function((*)) AST(variant,reference var) {{[103][101][116][69][113][117][97][108][105][122][101][114][66][97][110][100][115]}}(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[100][97][116][97]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#2959)((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[98][97][110][100][115]}}}} *=* ((*)) AST(collection) {[]}}*} (#2959) <<<<<<<<<<< >>>>>> 1 >>>>>> (#2959)((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[97][109][111][117][110][116]}}}} *=* ((*)) AST(expression,binary expr) {[] (null)(PREC=10) ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[77][97][116][104]}} <.> ((*)) AST(variant,reference var) {{[115][113][114][116]}}}(((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[100][97][116][97]}} <.> ((*)) AST(variant,reference var) {{[108][101][110][103][116][104]}}})} {DIVIDE(/)} ((*)) AST(variant,numeric var) {{(I)2}}}}*}(#2959) <<<<<<<<<<< >>>>>> 2 >>>>>> (#2959)((@)) AST(statement,for stmt) {*FOR* (((*)) AST(expression,sequence expr) {[] (null)((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[105]}}}} *=* ((*)) AST(variant,numeric var) {{(I)0}}}} *;* ((*)) AST(expression,binary expr) {[] (null)(PREC=7) ((*)) AST(variant,reference var) {{[105]}} {LT(<)} ((*)) AST(variant,reference var) {{[97][109][111][117][110][116]}}} *;* ((*)) AST(expression,postfix expr) {[] ((*)) AST(variant,reference var) {{[105]}}{SELF_PLUS(++)}} )((*)) AST(block) {>>>>>> 0 >>>>>> (#3281)((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[115][116][97][114][116]}}}} *=* ((*)) AST(expression,binary expr) {[] (null)(PREC=9) ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[77][97][116][104]}} <.> ((*)) AST(variant,reference var) {{[112][111][119]}}}(((*)) AST(variant,numeric var) {{(I)2}} <,> ((*)) AST(variant,reference var) {{[105]}})} {MINUS(-)} ((*)) AST(variant,numeric var) {{(I)1}}}}*} (#3281) <<<<<<<<<<< >>>>>> 1 >>>>>> (#3281)((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[101][110][100]}}}} *=* ((*)) AST(expression,binary expr) {[] (null)(PREC=9) ((*)) AST(expression,binary expr) {[] (null)(PREC=10) ((*)) AST(variant,reference var) {{[115][116][97][114][116]}} {MULTIPLY(*)} ((*)) AST(variant,numeric var) {{(I)2}}} {PLUS(+)} ((*)) AST(variant,numeric var) {{(I)1}}}}*}(#3281) <<<<<<<<<<< >>>>>> 2 >>>>>> (#3281)((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[115][117][109]}}}} *=* ((*)) AST(variant,numeric var) {{(I)0}}}*}(#3281) <<<<<<<<<<< >>>>>> 3 >>>>>> (#3281)((@)) AST(statement,for stmt) {*FOR* (((*)) AST(expression,sequence expr) {[] (null)((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[106]}}}} *=* ((*)) AST(variant,reference var) {{[115][116][97][114][116]}}}} *;* ((*)) AST(expression,binary expr) {[] (null)(PREC=7) ((*)) AST(variant,reference var) {{[106]}} {LT(<)} ((*)) AST(variant,reference var) {{[101][110][100]}}} *;* ((*)) AST(expression,postfix expr) {[] ((*)) AST(variant,reference var) {{[106]}}{SELF_PLUS(++)}} )((*)) AST(block) {>>>>>> 0 >>>>>> (#3194)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(variant,reference var) {{[115][117][109]}}{ASSIGN_PLUS(+=)} {((*)) AST(member ref,runtime member) {[] ((*)) AST(variant,reference var) {{[100][97][116][97]}}[((*)) AST(variant,reference var) {{[106]}}]}}}} (#3194) <<<<<<<<<<< }}(#3281) <<<<<<<<<<< >>>>>> 4 >>>>>> (#3281)((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[97][118][103]}}}} *=* ((*)) AST(expression,binary expr) {[] (null)(PREC=10) ((*)) AST(variant,reference var) {{[115][117][109]}} {DIVIDE(/)} ((*)) AST(expression,binary expr) {[] (null)(PREC=10) ((*)) AST(variant,numeric var) {{(I)255}} {MULTIPLY(*)} ((*)) AST(expression,binary expr) {[] (null)(PREC=9) ((*)) AST(variant,reference var) {{[101][110][100]}} {MINUS(-)} ((*)) AST(variant,reference var) {{[115][116][97][114][116]}}}}}}*}(#3281) <<<<<<<<<<< >>>>>> 5 >>>>>> (#3281)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,runtime member) {[] ((*)) AST(variant,reference var) {{[98][97][110][100][115]}}[((*)) AST(variant,reference var) {{[105]}}]}{ASSIGN_EQUAL(=)} {((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[77][97][116][104]}} <.> ((*)) AST(variant,reference var) {{[115][113][114][116]}}}(((*)) AST(expression,binary expr) {[] (null)(PREC=10) ((*)) AST(variant,reference var) {{[97][118][103]}} {DIVIDE(/)} ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[77][97][116][104]}} <.> ((*)) AST(variant,reference var) {{[115][113][114][116]}}}(((*)) AST(variant,numeric var) {{(I)2}})}})}}}}(#3281) <<<<<<<<<<< }}(#2959) <<<<<<<<<<< >>>>>> 3 >>>>>> (#2959)((@)) AST(statement,return stmt) {*RETURN*[] ((*)) AST(variant,reference var) {{[98][97][110][100][115]}}}(#2959) <<<<<<<<<<< }}
########################
##### Parse Result #####
((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[112][111][105][110][116][115]}}}} *=* ((*)) AST(variant,numeric var) {{(I)25}}}*}((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[108][101][110][103][116][104]}}}} *=* ((*)) AST(variant,numeric var) {{(I)35}}}*}((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[112][97][116][104]}}}} *=* ((*)) AST(expression,new expr) {[] ((*)) AST(variant,reference var) {{[80][97][116][104]}}(((*)) AST(object,general object) {{((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[115][116][114][111][107][101][67][111][108][111][114]}} <:> ((*)) AST(variant,string var) {{[35][69][52][49][52][49][66]}}} <,> ((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[115][116][114][111][107][101][87][105][100][116][104]}} <:> ((*)) AST(variant,numeric var) {{(I)20}}} <,> ((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[115][116][114][111][107][101][67][97][112]}} <:> ((*)) AST(variant,string var) {{[114][111][117][110][100]}}}}})}}*}((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[115][116][97][114][116]}}}} *=* ((*)) AST(expression,binary expr) {[] (null)(PREC=10) ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[118][105][101][119]}} <.> ((*)) AST(variant,reference var) {{[99][101][110][116][101][114]}}} {DIVIDE(/)} ((*)) AST(collection) {[((*)) AST(variant,numeric var) {{(I)10}} <,> ((*)) AST(variant,numeric var) {{(I)1}}]}}}*}((@)) AST(statement,for stmt) {*FOR* (((*)) AST(expression,sequence expr) {[] (null)((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[105]}}}} *=* ((*)) AST(variant,numeric var) {{(I)0}}}} *;* ((*)) AST(expression,binary expr) {[] (null)(PREC=7) ((*)) AST(variant,reference var) {{[105]}} {LT(<)} ((*)) AST(variant,reference var) {{[112][111][105][110][116][115]}}} *;* ((*)) AST(expression,postfix expr) {[] ((*)) AST(variant,reference var) {{[105]}}{SELF_PLUS(++)}} )((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[112][97][116][104]}} <.> ((*)) AST(variant,reference var) {{[97][100][100]}}}(((*)) AST(expression,binary expr) {[] (null)(PREC=9) ((*)) AST(variant,reference var) {{[115][116][97][114][116]}} {PLUS(+)} ((*)) AST(expression,new expr) {[] ((*)) AST(variant,reference var) {{[80][111][105][110][116]}}(((*)) AST(expression,binary expr) {[] (null)(PREC=10) ((*)) AST(variant,reference var) {{[105]}} {MULTIPLY(*)} ((*)) AST(variant,reference var) {{[108][101][110][103][116][104]}}} <,> ((*)) AST(variant,numeric var) {{(I)0}})}})}}}((*)) AST(function,function) {function((*)) AST(variant,reference var) {{[111][110][77][111][117][115][101][77][111][118][101]}}(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[101][118][101][110][116]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#446)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[112][97][116][104]}} <.> ((*)) AST(variant,reference var) {{[102][105][114][115][116][83][101][103][109][101][110][116]}}} <.> ((*)) AST(variant,reference var) {{[112][111][105][110][116]}}}{ASSIGN_EQUAL(=)} {((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[101][118][101][110][116]}} <.> ((*)) AST(variant,reference var) {{[112][111][105][110][116]}}}}}} (#446) <<<<<<<<<<< >>>>>> 1 >>>>>> (#446)((@)) AST(statement,for stmt) {*FOR* (((*)) AST(expression,sequence expr) {[] (null)((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[105]}}}} *=* ((*)) AST(variant,numeric var) {{(I)0}}}} *;* ((*)) AST(expression,binary expr) {[] (null)(PREC=7) ((*)) AST(variant,reference var) {{[105]}} {LT(<)} ((*)) AST(expression,binary expr) {[] (null)(PREC=9) ((*)) AST(variant,reference var) {{[112][111][105][110][116][115]}} {MINUS(-)} ((*)) AST(variant,numeric var) {{(I)1}}}} *;* ((*)) AST(expression,postfix expr) {[] ((*)) AST(variant,reference var) {{[105]}}{SELF_PLUS(++)}} )((*)) AST(block) {>>>>>> 0 >>>>>> (#722)((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[115][101][103][109][101][110][116]}}}} *=* ((*)) AST(member ref,runtime member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[112][97][116][104]}} <.> ((*)) AST(variant,reference var) {{[115][101][103][109][101][110][116][115]}}}[((*)) AST(variant,reference var) {{[105]}}]}}*} (#722) <<<<<<<<<<< >>>>>> 1 >>>>>> (#722)((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[110][101][120][116][83][101][103][109][101][110][116]}}}} *=* ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[115][101][103][109][101][110][116]}} <.> ((*)) AST(variant,reference var) {{[110][101][120][116]}}}}*}(#722) <<<<<<<<<<< >>>>>> 2 >>>>>> (#722)((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[118][101][99][116][111][114]}}}} *=* ((*)) AST(expression,binary expr) {[] (null)(PREC=9) ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[115][101][103][109][101][110][116]}} <.> ((*)) AST(variant,reference var) {{[112][111][105][110][116]}}} {MINUS(-)} ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[110][101][120][116][83][101][103][109][101][110][116]}} <.> ((*)) AST(variant,reference var) {{[112][111][105][110][116]}}}}}*}(#722) <<<<<<<<<<< >>>>>> 3 >>>>>> (#722)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[118][101][99][116][111][114]}} <.> ((*)) AST(variant,reference var) {{[108][101][110][103][116][104]}}}{ASSIGN_EQUAL(=)} {((*)) AST(variant,reference var) {{[108][101][110][103][116][104]}}}}}(#722) <<<<<<<<<<< >>>>>> 4 >>>>>> (#722)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[110][101][120][116][83][101][103][109][101][110][116]}} <.> ((*)) AST(variant,reference var) {{[112][111][105][110][116]}}}{ASSIGN_EQUAL(=)} {((*)) AST(expression,binary expr) {[] (null)(PREC=9) ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[115][101][103][109][101][110][116]}} <.> ((*)) AST(variant,reference var) {{[112][111][105][110][116]}}} {MINUS(-)} ((*)) AST(variant,reference var) {{[118][101][99][116][111][114]}}}}}}(#722) <<<<<<<<<<< }}(#446) <<<<<<<<<<< >>>>>> 2 >>>>>> (#446)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[112][97][116][104]}} <.> ((*)) AST(variant,reference var) {{[115][109][111][111][116][104]}}}(((*)) AST(object,general object) {{((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[116][121][112][101]}} <:> ((*)) AST(variant,string var) {{[99][111][110][116][105][110][117][111][117][115]}}}}})}}(#446) <<<<<<<<<<< }}((*)) AST(function,function) {function((*)) AST(variant,reference var) {{[111][110][77][111][117][115][101][68][111][119][110]}}(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[101][118][101][110][116]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#790)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[112][97][116][104]}} <.> ((*)) AST(variant,reference var) {{[102][117][108][108][121][83][101][108][101][99][116][101][100]}}}{ASSIGN_EQUAL(=)} {((*)) AST(variant,bool var) {{true}}}}} (#790) <<<<<<<<<<< >>>>>> 1 >>>>>> (#790)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[112][97][116][104]}} <.> ((*)) AST(variant,reference var) {{[115][116][114][111][107][101][67][111][108][111][114]}}}{ASSIGN_EQUAL(=)} {((*)) AST(variant,string var) {{[35][101][48][56][50][56][53]}}}}}(#790) <<<<<<<<<<< }}((*)) AST(function,function) {function((*)) AST(variant,reference var) {{[111][110][77][111][117][115][101][85][112]}}(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[101][118][101][110][116]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#880)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[112][97][116][104]}} <.> ((*)) AST(variant,reference var) {{[102][117][108][108][121][83][101][108][101][99][116][101][100]}}}{ASSIGN_EQUAL(=)} {((*)) AST(variant,bool var) {{false}}}}} (#880) <<<<<<<<<<< >>>>>> 1 >>>>>> (#880)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[112][97][116][104]}} <.> ((*)) AST(variant,reference var) {{[115][116][114][111][107][101][67][111][108][111][114]}}}{ASSIGN_EQUAL(=)} {((*)) AST(variant,string var) {{[35][101][52][49][52][49][98]}}}}}(#880) <<<<<<<<<<< }}
########################

##### Parse Result #####
((*)) AST(function,function) {function((*)) AST(variant,reference var) {{[97]}}(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[98]}}}} <,> ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[99]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#16)((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[100]}}}} *=* ((*)) AST(variant,numeric var) {{(I)0}}}*} (#16) <<<<<<<<<<< >>>>>> 1 >>>>>> (#16)((@)) AST(statement,do-while stmt) {*DO*((*)) AST(block) {>>>>>> 0 >>>>>> (#122)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(variant,reference var) {{[100]}}{ASSIGN_PLUS(+=)} {((*)) AST(variant,reference var) {{[98]}}}}} (#122) <<<<<<<<<<< >>>>>> 1 >>>>>> (#122)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(variant,reference var) {{[100]}}{ASSIGN_MINUS(-=)} {((*)) AST(variant,reference var) {{[99]}}}}}(#122) <<<<<<<<<<< >>>>>> 2 >>>>>> (#122)((@)) AST(statement,if-else stmt) {*IF*[] ((*)) AST(expression,binary expr) {[] (null)(PREC=6) ((*)) AST(expression,binary expr) {[] (null)(PREC=10) ((*)) AST(variant,reference var) {{[100]}} {MOD(%)} ((*)) AST(variant,numeric var) {{(I)10}}} {EQUAL_V(==)} ((*)) AST(variant,numeric var) {{(I)0}}}*TRUE_BLOCK*((*)) AST(block) {>>>>>> 0 >>>>>> (#111)((@)) AST(statement,continue stmt) {[] (null)} (#111) <<<<<<<<<<< }*FALSE_BLOCK*(null)}(#122) <<<<<<<<<<< >>>>>> 3 >>>>>> (#122)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(variant,reference var) {{[100]}}{ASSIGN_PLUS(+=)} {((*)) AST(variant,reference var) {{[99]}}}}}(#122) <<<<<<<<<<< }*WHILE* (((*)) AST(expression,binary expr) {[] (null)(PREC=7) ((*)) AST(variant,reference var) {{[100]}} {LT(<)} ((*)) AST(variant,numeric var) {{(I)100}}})}(#16) <<<<<<<<<<< }}
########################
##### Parse Result #####
((*)) AST(function,function) {function((*)) AST(variant,reference var) {{[97]}}(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[98]}}}} <,> ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[99]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#16)((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[100]}}}} *=* ((*)) AST(variant,numeric var) {{(I)0}}}*} (#16) <<<<<<<<<<< >>>>>> 1 >>>>>> (#16)((@)) AST(statement,do-while stmt) {*DO*((*)) AST(block) {>>>>>> 0 >>>>>> (#148)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(variant,reference var) {{[100]}}{ASSIGN_PLUS(+=)} {((*)) AST(variant,reference var) {{[98]}}}}} (#148) <<<<<<<<<<< >>>>>> 1 >>>>>> (#148)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(variant,reference var) {{[100]}}{ASSIGN_MINUS(-=)} {((*)) AST(variant,reference var) {{[99]}}}}}(#148) <<<<<<<<<<< >>>>>> 2 >>>>>> (#148)((@)) AST(statement,if-else stmt) {*IF*[] ((*)) AST(expression,binary expr) {[] (null)(PREC=6) ((*)) AST(expression,binary expr) {[] (null)(PREC=10) ((*)) AST(variant,reference var) {{[100]}} {MOD(%)} ((*)) AST(variant,numeric var) {{(I)10}}} {EQUAL_V(==)} ((*)) AST(variant,numeric var) {{(I)0}}}*TRUE_BLOCK*((*)) AST(block) {>>>>>> 0 >>>>>> (#107)((@)) AST(statement,continue stmt) {[] (null)} (#107) <<<<<<<<<<< }*FALSE_BLOCK*((*)) AST(block) {>>>>>> 0 >>>>>> (#137)((@)) AST(statement,break stmt) {[] (null)} (#137) <<<<<<<<<<< }}(#148) <<<<<<<<<<< >>>>>> 3 >>>>>> (#148)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(variant,reference var) {{[100]}}{ASSIGN_PLUS(+=)} {((*)) AST(variant,reference var) {{[99]}}}}}(#148) <<<<<<<<<<< }*WHILE* (((*)) AST(expression,binary expr) {[] (null)(PREC=7) ((*)) AST(variant,reference var) {{[100]}} {LT(<)} ((*)) AST(variant,numeric var) {{(I)100}}})}(#16) <<<<<<<<<<< }}
########################

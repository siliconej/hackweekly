##### Parse Result #####
((*)) AST(function,function) {function((*)) AST(variant,reference var) {{[84][99]}}()((*)) AST(block) {>>>>>> 0 >>>>>> (#13)((@)) AST(statement,return stmt) {*RETURN*[] ((*)) AST(function,function) {function(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[97]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#32)((@)) AST(statement,return stmt) {*RETURN*[] ((*)) AST(variant,reference var) {{[97]}}} (#32) <<<<<<<<<<< }}} (#13) <<<<<<<<<<< }}((*)) AST(function,function) {function((*)) AST(variant,reference var) {{[113]}}()((*)) AST(block) {>>>>>> 0 >>>>>> (#55)((@)) AST(statement,return stmt) {*RETURN*[] ((*)) AST(function,function) {function()((*)) AST(block) {}}} (#55) <<<<<<<<<<< }}((*)) AST(function,function) {function((*)) AST(variant,reference var) {{[85][99]}}(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[97]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#90)((@)) AST(statement,return stmt) {*RETURN*[] ((*)) AST(function,function) {function(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[98]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#109)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,runtime member) {[] ((*)) AST(variant,special var) {{this}}[((*)) AST(variant,reference var) {{[97]}}]}{ASSIGN_EQUAL(=)} {((*)) AST(variant,reference var) {{[98]}}}}} (#109) <<<<<<<<<<< }}} (#90) <<<<<<<<<<< }}((*)) AST(function,function) {function((*)) AST(variant,reference var) {{[86][99]}}(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[97]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#135)((@)) AST(statement,return stmt) {*RETURN*[] ((*)) AST(function,function) {function()((*)) AST(block) {>>>>>> 0 >>>>>> (#153)((@)) AST(statement,return stmt) {*RETURN*[] ((*)) AST(variant,reference var) {{[97]}}} (#153) <<<<<<<<<<< }}} (#135) <<<<<<<<<<< }}((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[87][99]}}}} *=* ((*)) AST(expression,conditional expr) {[] ((*)) AST(expression,binary expr) {[] (null)(PREC=6) ((*)) AST(expression,unary expr) {{typeof} [] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[79][98][106][101][99][116]}} <.> ((*)) AST(variant,reference var) {{[100][101][102][105][110][101][80][114][111][112][101][114][116][105][101][115]}}}} {EQUAL_V(==)} ((*)) AST(variant,reference var) {{[109]}}} <?> ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[79][98][106][101][99][116]}} <.> ((*)) AST(variant,reference var) {{[100][101][102][105][110][101][80][114][111][112][101][114][116][121]}}} <:> ((*)) AST(function,function) {function(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[97]}}}} <,> ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[98]}}}} <,> ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[99]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#243)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,binary expr) {[] (null)(PREC=2) ((*)) AST(expression,binary expr) {[] (null)(PREC=2) ((*)) AST(expression,binary expr) {[] (null)(PREC=6) ((*)) AST(variant,reference var) {{[97]}} {NOT_EQUAL_V(!=)} ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[65][114][114][97][121]}} <.> ((*)) AST(variant,reference var) {{[112][114][111][116][111][116][121][112][101]}}}} {BOOL_AND(&&)} ((*)) AST(expression,binary expr) {[] (null)(PREC=6) ((*)) AST(variant,reference var) {{[97]}} {NOT_EQUAL_V(!=)} ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[79][98][106][101][99][116]}} <.> ((*)) AST(variant,reference var) {{[112][114][111][116][111][116][121][112][101]}}}}} {BOOL_AND(&&)} ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,runtime member) {[] ((*)) AST(variant,reference var) {{[97]}}[((*)) AST(variant,reference var) {{[98]}}]}{ASSIGN_EQUAL(=)} {((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[99]}} <.> ((*)) AST(variant,reference var) {{[118][97][108][117][101]}}}}}}} (#243) <<<<<<<<<<< }}}} <,> ((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[88][99]}}}} *=* ((*)) AST(expression,call expr) {[] ((*)) AST(function,function) {function(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[97]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#315)((@)) AST(statement,return stmt) {*RETURN*[] ((*)) AST(expression,conditional expr) {[] ((*)) AST(expression,binary expr) {[] (null)(PREC=2) ((*)) AST(expression,binary expr) {[] (null)(PREC=6) ((*)) AST(variant,string var) {{[117][110][100][101][102][105][110][101][100]}} {NOT_EQUAL_V(!=)} ((*)) AST(expression,unary expr) {{typeof} [] ((*)) AST(variant,reference var) {{[119][105][110][100][111][119]}}}} {BOOL_AND(&&)} ((*)) AST(expression,binary expr) {[] (null)(PREC=6) ((*)) AST(variant,reference var) {{[119][105][110][100][111][119]}} {EQUAL_VT(===)} ((*)) AST(variant,reference var) {{[97]}}}} <?> ((*)) AST(variant,reference var) {{[97]}} <:> ((*)) AST(expression,conditional expr) {[] ((*)) AST(expression,binary expr) {[] (null)(PREC=2) ((*)) AST(expression,binary expr) {[] (null)(PREC=6) ((*)) AST(variant,string var) {{[117][110][100][101][102][105][110][101][100]}} {NOT_EQUAL_V(!=)} ((*)) AST(expression,unary expr) {{typeof} [] ((*)) AST(variant,reference var) {{[103][108][111][98][97][108]}}}} {BOOL_AND(&&)} ((*)) AST(expression,binary expr) {[] (null)(PREC=6) ((*)) AST(variant,special var) {{NULL}} {NOT_EQUAL_V(!=)} ((*)) AST(variant,reference var) {{[103][108][111][98][97][108]}}}} <?> ((*)) AST(variant,reference var) {{[103][108][111][98][97][108]}} <:> ((*)) AST(variant,reference var) {{[97]}}}}} (#315) <<<<<<<<<<< }}(((*)) AST(variant,special var) {{this}})}} <,> ((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[89][99]}}}} *=* ((*)) AST(function,function) {function()((*)) AST(block) {>>>>>> 0 >>>>>> (#433)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(variant,reference var) {{[89][99]}}{ASSIGN_EQUAL(=)} {((*)) AST(expression,call expr) {[] ((*)) AST(variant,reference var) {{[113]}}()}}}} (#433) <<<<<<<<<<< >>>>>> 1 >>>>>> (#433)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,binary expr) {[] (null)(PREC=1) ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[88][99]}} <.> ((*)) AST(variant,reference var) {{[83][121][109][98][111][108]}}} {BOOL_OR(||)} ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[88][99]}} <.> ((*)) AST(variant,reference var) {{[83][121][109][98][111][108]}}}{ASSIGN_EQUAL(=)} {((*)) AST(variant,reference var) {{[90][99]}}}}}}(#433) <<<<<<<<<<< }}} <,> ((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[90][99]}}}} *=* ((*)) AST(expression,call expr) {[] ((*)) AST(function,function) {function()((*)) AST(block) {>>>>>> 0 >>>>>> (#481)((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[97]}}}} *=* ((*)) AST(variant,numeric var) {{(I)0}}}*} (#481) <<<<<<<<<<< >>>>>> 1 >>>>>> (#481)((@)) AST(statement,return stmt) {*RETURN*[] ((*)) AST(function,function) {function(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[98]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#508)((@)) AST(statement,return stmt) {*RETURN*[] ((*)) AST(expression,binary expr) {[] (null)(PREC=9) ((*)) AST(expression,binary expr) {[] (null)(PREC=9) ((*)) AST(variant,string var) {{[106][115][99][111][109][112][95][115][121][109][98][111][108][95]}} {PLUS(+)} ((*)) AST(expression,binary expr) {[] (null)(PREC=1) ((*)) AST(variant,reference var) {{[98]}} {BOOL_OR(||)} ((*)) AST(variant,string var) {{}}}} {PLUS(+)} ((*)) AST(expression,postfix expr) {[] ((*)) AST(variant,reference var) {{[97]}}{SELF_PLUS(++)}}}} (#508) <<<<<<<<<<< }}}(#481) <<<<<<<<<<< }}()}} <,> ((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[97][100]}}}} *=* ((*)) AST(function,function) {function()((*)) AST(block) {>>>>>> 0 >>>>>> (#561)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(variant,reference var) {{[89][99]}}()}} (#561) <<<<<<<<<<< >>>>>> 1 >>>>>> (#561)((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[97]}}}} *=* ((*)) AST(member ref,static member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[88][99]}} <.> ((*)) AST(variant,reference var) {{[83][121][109][98][111][108]}}} <.> ((*)) AST(variant,reference var) {{[105][116][101][114][97][116][111][114]}}}}*}(#561) <<<<<<<<<<< >>>>>> 2 >>>>>> (#561)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,binary expr) {[] (null)(PREC=1) ((*)) AST(variant,reference var) {{[97]}} {BOOL_OR(||)} ((*)) AST(expression,assignment expr) {[] ((*)) AST(variant,reference var) {{[97]}}{ASSIGN_EQUAL(=)} {((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[88][99]}} <.> ((*)) AST(variant,reference var) {{[83][121][109][98][111][108]}}} <.> ((*)) AST(variant,reference var) {{[105][116][101][114][97][116][111][114]}}}{ASSIGN_EQUAL(=)} {((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[88][99]}} <.> ((*)) AST(variant,reference var) {{[83][121][109][98][111][108]}}}(((*)) AST(variant,string var) {{[105][116][101][114][97][116][111][114]}})}}}}}}}(#561) <<<<<<<<<<< >>>>>> 3 >>>>>> (#561)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,binary expr) {[] (null)(PREC=2) ((*)) AST(expression,binary expr) {[] (null)(PREC=6) ((*)) AST(expression,unary expr) {{typeof} [] ((*)) AST(member ref,runtime member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[65][114][114][97][121]}} <.> ((*)) AST(variant,reference var) {{[112][114][111][116][111][116][121][112][101]}}}[((*)) AST(variant,reference var) {{[97]}}]}} {NOT_EQUAL_V(!=)} ((*)) AST(variant,reference var) {{[109]}}} {BOOL_AND(&&)} ((*)) AST(expression,call expr) {[] ((*)) AST(variant,reference var) {{[87][99]}}(((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[65][114][114][97][121]}} <.> ((*)) AST(variant,reference var) {{[112][114][111][116][111][116][121][112][101]}}} <,> ((*)) AST(variant,reference var) {{[97]}} <,> ((*)) AST(object,general object) {{((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[99][111][110][102][105][103][117][114][97][98][108][101]}} <:> ((*)) AST(expression,unary expr) {{BOOL_NOT(!)} [] ((*)) AST(variant,numeric var) {{(I)0}}}} <,> ((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[119][114][105][116][97][98][108][101]}} <:> ((*)) AST(expression,unary expr) {{BOOL_NOT(!)} [] ((*)) AST(variant,numeric var) {{(I)0}}}} <,> ((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[118][97][108][117][101]}} <:> ((*)) AST(function,function) {function()((*)) AST(block) {>>>>>> 0 >>>>>> (#737)((@)) AST(statement,return stmt) {*RETURN*[] ((*)) AST(expression,call expr) {[] ((*)) AST(variant,reference var) {{[36][99]}}(((*)) AST(variant,special var) {{this}})}} (#737) <<<<<<<<<<< }}}}})}}}(#561) <<<<<<<<<<< >>>>>> 4 >>>>>> (#561)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(variant,reference var) {{[97][100]}}{ASSIGN_EQUAL(=)} {((*)) AST(expression,call expr) {[] ((*)) AST(variant,reference var) {{[113]}}()}}}}(#561) <<<<<<<<<<< }}} <,> ((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[36][99]}}}} *=* ((*)) AST(function,function) {function(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[97]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#779)((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[98]}}}} *=* ((*)) AST(variant,numeric var) {{(I)0}}}*} (#779) <<<<<<<<<<< >>>>>> 1 >>>>>> (#779)((@)) AST(statement,return stmt) {*RETURN*[] ((*)) AST(expression,call expr) {[] ((*)) AST(variant,reference var) {{[98][100]}}(((*)) AST(function,function) {function()((*)) AST(block) {>>>>>> 0 >>>>>> (#808)((@)) AST(statement,return stmt) {*RETURN*[] ((*)) AST(expression,conditional expr) {[] ((*)) AST(expression,binary expr) {[] (null)(PREC=7) ((*)) AST(variant,reference var) {{[98]}} {LT(<)} ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[97]}} <.> ((*)) AST(variant,reference var) {{[108][101][110][103][116][104]}}}} <?> ((*)) AST(object,general object) {{((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[100][111][110][101]}} <:> ((*)) AST(expression,unary expr) {{BOOL_NOT(!)} [] ((*)) AST(variant,numeric var) {{(I)1}}}} <,> ((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[118][97][108][117][101]}} <:> ((*)) AST(member ref,runtime member) {[] ((*)) AST(variant,reference var) {{[97]}}[((*)) AST(expression,postfix expr) {[] ((*)) AST(variant,reference var) {{[98]}}{SELF_PLUS(++)}}]}}}} <:> ((*)) AST(object,general object) {{((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[100][111][110][101]}} <:> ((*)) AST(expression,unary expr) {{BOOL_NOT(!)} [] ((*)) AST(variant,numeric var) {{(I)0}}}}}}}} (#808) <<<<<<<<<<< }})}}(#779) <<<<<<<<<<< }}} <,> ((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[98][100]}}}} *=* ((*)) AST(function,function) {function(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[97]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#877)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(variant,reference var) {{[97][100]}}()}} (#877) <<<<<<<<<<< >>>>>> 1 >>>>>> (#877)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(variant,reference var) {{[97]}}{ASSIGN_EQUAL(=)} {((*)) AST(object,general object) {{((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[110][101][120][116]}} <:> ((*)) AST(variant,reference var) {{[97]}}}}}}}}(#877) <<<<<<<<<<< >>>>>> 2 >>>>>> (#877)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,runtime member) {[] ((*)) AST(variant,reference var) {{[97]}}[((*)) AST(member ref,static member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[88][99]}} <.> ((*)) AST(variant,reference var) {{[83][121][109][98][111][108]}}} <.> ((*)) AST(variant,reference var) {{[105][116][101][114][97][116][111][114]}}}]}{ASSIGN_EQUAL(=)} {((*)) AST(function,function) {function()((*)) AST(block) {>>>>>> 0 >>>>>> (#926)((@)) AST(statement,return stmt) {*RETURN*[] ((*)) AST(variant,special var) {{this}}} (#926) <<<<<<<<<<< }}}}}(#877) <<<<<<<<<<< >>>>>> 3 >>>>>> (#877)((@)) AST(statement,return stmt) {*RETURN*[] ((*)) AST(variant,reference var) {{[97]}}}(#877) <<<<<<<<<<< }}} <,> ((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[99][100]}}}} *=* ((*)) AST(function,function) {function(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[97]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#964)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(variant,reference var) {{[97][100]}}()}} (#964) <<<<<<<<<<< >>>>>> 1 >>>>>> (#964)((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[98]}}}} *=* ((*)) AST(member ref,runtime member) {[] ((*)) AST(variant,reference var) {{[97]}}[((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[83][121][109][98][111][108]}} <.> ((*)) AST(variant,reference var) {{[105][116][101][114][97][116][111][114]}}}]}}*}(#964) <<<<<<<<<<< >>>>>> 2 >>>>>> (#964)((@)) AST(statement,return stmt) {*RETURN*[] ((*)) AST(expression,conditional expr) {[] ((*)) AST(variant,reference var) {{[98]}} <?> ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[98]}} <.> ((*)) AST(variant,reference var) {{[99][97][108][108]}}}(((*)) AST(variant,reference var) {{[97]}})} <:> ((*)) AST(expression,call expr) {[] ((*)) AST(variant,reference var) {{[36][99]}}(((*)) AST(variant,reference var) {{[97]}})}}}(#964) <<<<<<<<<<< }}} <,> ((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[100][100]}}}} *=* ((*)) AST(function,function) {function(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[97]}}}} <,> ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[98]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#1037)((@)) AST(statement,if-else stmt) {*IF*[] ((*)) AST(variant,reference var) {{[98]}}*TRUE_BLOCK*((*)) AST(block) {>>>>>> 0 >>>>>> (#1226)((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[99]}}}} *=* ((*)) AST(variant,reference var) {{[88][99]}}}*} (#1226) <<<<<<<<<<< >>>>>> 1 >>>>>> (#1226)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(variant,reference var) {{[97]}}{ASSIGN_EQUAL(=)} {((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[97]}} <.> ((*)) AST(variant,reference var) {{[115][112][108][105][116]}}}(((*)) AST(variant,string var) {{[46]}})}}}}(#1226) <<<<<<<<<<< >>>>>> 2 >>>>>> (#1226)((@)) AST(statement,for stmt) {*FOR* (((*)) AST(expression,sequence expr) {[] (null)((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[100]}}}} *=* ((*)) AST(variant,numeric var) {{(I)0}}}} *;* ((*)) AST(expression,binary expr) {[] (null)(PREC=7) ((*)) AST(variant,reference var) {{[100]}} {LT(<)} ((*)) AST(expression,binary expr) {[] (null)(PREC=9) ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[97]}} <.> ((*)) AST(variant,reference var) {{[108][101][110][103][116][104]}}} {MINUS(-)} ((*)) AST(variant,numeric var) {{(I)1}}}} *;* ((*)) AST(expression,postfix expr) {[] ((*)) AST(variant,reference var) {{[100]}}{SELF_PLUS(++)}} )((*)) AST(block) {>>>>>> 0 >>>>>> (#1134)((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[101]}}}} *=* ((*)) AST(member ref,runtime member) {[] ((*)) AST(variant,reference var) {{[97]}}[((*)) AST(variant,reference var) {{[100]}}]}}*} (#1134) <<<<<<<<<<< >>>>>> 1 >>>>>> (#1134)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,binary expr) {[] (null)(PREC=1) ((*)) AST(expression,binary expr) {[] (null)(PREC=7) ((*)) AST(variant,reference var) {{[101]}} {IN} ((*)) AST(variant,reference var) {{[99]}}} {BOOL_OR(||)} ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,runtime member) {[] ((*)) AST(variant,reference var) {{[99]}}[((*)) AST(variant,reference var) {{[101]}}]}{ASSIGN_EQUAL(=)} {((*)) AST(object,general object) {{}}}}}}(#1134) <<<<<<<<<<< >>>>>> 2 >>>>>> (#1134)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(variant,reference var) {{[99]}}{ASSIGN_EQUAL(=)} {((*)) AST(member ref,runtime member) {[] ((*)) AST(variant,reference var) {{[99]}}[((*)) AST(variant,reference var) {{[101]}}]}}}}(#1134) <<<<<<<<<<< }}(#1226) <<<<<<<<<<< >>>>>> 3 >>>>>> (#1226)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(variant,reference var) {{[97]}}{ASSIGN_EQUAL(=)} {((*)) AST(member ref,runtime member) {[] ((*)) AST(variant,reference var) {{[97]}}[((*)) AST(expression,binary expr) {[] (null)(PREC=9) ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[97]}} <.> ((*)) AST(variant,reference var) {{[108][101][110][103][116][104]}}} {MINUS(-)} ((*)) AST(variant,numeric var) {{(I)1}}}]}}}}(#1226) <<<<<<<<<<< >>>>>> 4 >>>>>> (#1226)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(variant,reference var) {{[100]}}{ASSIGN_EQUAL(=)} {((*)) AST(member ref,runtime member) {[] ((*)) AST(variant,reference var) {{[99]}}[((*)) AST(variant,reference var) {{[97]}}]}}}}(#1226) <<<<<<<<<<< >>>>>> 5 >>>>>> (#1226)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(variant,reference var) {{[98]}}{ASSIGN_EQUAL(=)} {((*)) AST(expression,call expr) {[] ((*)) AST(variant,reference var) {{[98]}}(((*)) AST(variant,reference var) {{[100]}})}}}}(#1226) <<<<<<<<<<< >>>>>> 6 >>>>>> (#1226)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,binary expr) {[] (null)(PREC=2) ((*)) AST(expression,binary expr) {[] (null)(PREC=2) ((*)) AST(expression,binary expr) {[] (null)(PREC=6) ((*)) AST(variant,reference var) {{[98]}} {NOT_EQUAL_V(!=)} ((*)) AST(variant,reference var) {{[100]}}} {BOOL_AND(&&)} ((*)) AST(expression,binary expr) {[] (null)(PREC=6) ((*)) AST(variant,special var) {{NULL}} {NOT_EQUAL_V(!=)} ((*)) AST(variant,reference var) {{[98]}}}} {BOOL_AND(&&)} ((*)) AST(expression,call expr) {[] ((*)) AST(variant,reference var) {{[87][99]}}(((*)) AST(variant,reference var) {{[99]}} <,> ((*)) AST(variant,reference var) {{[97]}} <,> ((*)) AST(object,general object) {{((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[99][111][110][102][105][103][117][114][97][98][108][101]}} <:> ((*)) AST(expression,unary expr) {{BOOL_NOT(!)} [] ((*)) AST(variant,numeric var) {{(I)0}}}} <,> ((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[119][114][105][116][97][98][108][101]}} <:> ((*)) AST(expression,unary expr) {{BOOL_NOT(!)} [] ((*)) AST(variant,numeric var) {{(I)0}}}} <,> ((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[118][97][108][117][101]}} <:> ((*)) AST(variant,reference var) {{[98]}}}}})}}}(#1226) <<<<<<<<<<< }*FALSE_BLOCK*(null)} (#1037) <<<<<<<<<<< }}}*}((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(variant,reference var) {{[100][100]}}(((*)) AST(variant,string var) {{[80][114][111][109][105][115][101]}} <,> ((*)) AST(function,function) {function(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[97]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#1253)((*)) AST(function,function) {function((*)) AST(variant,reference var) {{[98]}}()((*)) AST(block) {>>>>>> 0 >>>>>> (#1266)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[97]}}}{ASSIGN_EQUAL(=)} {((*)) AST(variant,special var) {{NULL}}}}} (#1266) <<<<<<<<<<< }} (#1253) <<<<<<<<<<< >>>>>> 1 >>>>>> (#1253)((*)) AST(function,function) {function((*)) AST(variant,reference var) {{[99]}}(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[97]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#1292)((@)) AST(statement,switch stmt) {*SWITCH*[] ((*)) AST(expression,unary expr) {{typeof} [] ((*)) AST(variant,reference var) {{[97]}}}{((@)) AST(statement,case clause) {*CASE*[] ((*)) AST(variant,reference var) {{[88][98]}} *:* {((@)) AST(statement,return stmt) {*RETURN*[] ((*)) AST(expression,binary expr) {[] (null)(PREC=6) ((*)) AST(variant,special var) {{NULL}} {NOT_EQUAL_V(!=)} ((*)) AST(variant,reference var) {{[97]}}}}}};((@)) AST(statement,case clause) {*CASE*[] ((*)) AST(variant,reference var) {{[109]}} *:* {((@)) AST(statement,return stmt) {*RETURN*[] ((*)) AST(expression,unary expr) {{BOOL_NOT(!)} [] ((*)) AST(variant,numeric var) {{(I)0}}}}}};((@)) AST(statement,case clause) {*DEFAULT:*{((@)) AST(statement,return stmt) {*RETURN*[] ((*)) AST(expression,unary expr) {{BOOL_NOT(!)} [] ((*)) AST(variant,numeric var) {{(I)1}}}}}}}} (#1292) <<<<<<<<<<< }}(#1253) <<<<<<<<<<< >>>>>> 2 >>>>>> (#1253)((*)) AST(function,function) {function((*)) AST(variant,reference var) {{[100]}}(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[97]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#1380)((@)) AST(statement,return stmt) {*RETURN*[] ((*)) AST(expression,conditional expr) {[] ((*)) AST(expression,binary expr) {[] (null)(PREC=7) ((*)) AST(variant,reference var) {{[97]}} {INSTANCE_OF} ((*)) AST(variant,reference var) {{[102]}}} <?> ((*)) AST(variant,reference var) {{[97]}} <:> ((*)) AST(expression,new expr) {[] ((*)) AST(variant,reference var) {{[102]}}(((*)) AST(function,function) {function(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[98]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#1422)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(variant,reference var) {{[98]}}(((*)) AST(variant,reference var) {{[97]}})}} (#1422) <<<<<<<<<<< }})}}} (#1380) <<<<<<<<<<< }}(#1253) <<<<<<<<<<< >>>>>> 3 >>>>>> (#1253)((@)) AST(statement,if-else stmt) {*IF*[] ((*)) AST(variant,reference var) {{[97]}}*TRUE_BLOCK*((@)) AST(statement,return stmt) {*RETURN*[] ((*)) AST(variant,reference var) {{[97]}}}*FALSE_BLOCK*(null)}(#1253) <<<<<<<<<<< >>>>>> 4 >>>>>> (#1253)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[98]}} <.> ((*)) AST(variant,reference var) {{[112][114][111][116][111][116][121][112][101]}}} <.> ((*)) AST(variant,reference var) {{[98]}}}{ASSIGN_EQUAL(=)} {((*)) AST(function,function) {function(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[97]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#1469)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,binary expr) {[] (null)(PREC=2) ((*)) AST(expression,binary expr) {[] (null)(PREC=6) ((*)) AST(variant,special var) {{NULL}} {EQUAL_V(==)} ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[97]}}}} {BOOL_AND(&&)} ((*)) AST(expression,sequence expr) {[] (null)((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[97]}}}{ASSIGN_EQUAL(=)} {((*)) AST(collection) {[]}}} <,> ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[102]}}}()}}}} (#1469) <<<<<<<<<<< >>>>>> 1 >>>>>> (#1469)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[97]}}} <.> ((*)) AST(variant,reference var) {{[112][117][115][104]}}}(((*)) AST(variant,reference var) {{[97]}})}}(#1469) <<<<<<<<<<< }}}}}(#1253) <<<<<<<<<<< >>>>>> 5 >>>>>> (#1253)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[98]}} <.> ((*)) AST(variant,reference var) {{[112][114][111][116][111][116][121][112][101]}}} <.> ((*)) AST(variant,reference var) {{[102]}}}{ASSIGN_EQUAL(=)} {((*)) AST(function,function) {function()((*)) AST(block) {>>>>>> 0 >>>>>> (#1545)((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[97]}}}} *=* ((*)) AST(variant,special var) {{this}}}*} (#1545) <<<<<<<<<<< >>>>>> 1 >>>>>> (#1545)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[99]}}}(((*)) AST(function,function) {function()((*)) AST(block) {>>>>>> 0 >>>>>> (#1574)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[97]}} <.> ((*)) AST(variant,reference var) {{[108]}}}()}} (#1574) <<<<<<<<<<< }})}}(#1545) <<<<<<<<<<< }}}}}(#1253) <<<<<<<<<<< >>>>>> 6 >>>>>> (#1253)((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[101]}}}} *=* ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[88][99]}} <.> ((*)) AST(variant,reference var) {{[115][101][116][84][105][109][101][111][117][116]}}}}*}(#1253) <<<<<<<<<<< >>>>>> 7 >>>>>> (#1253)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[98]}} <.> ((*)) AST(variant,reference var) {{[112][114][111][116][111][116][121][112][101]}}} <.> ((*)) AST(variant,reference var) {{[99]}}}{ASSIGN_EQUAL(=)} {((*)) AST(function,function) {function(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[97]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#1629)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(variant,reference var) {{[101]}}(((*)) AST(variant,reference var) {{[97]}} <,> ((*)) AST(variant,numeric var) {{(I)0}})}} (#1629) <<<<<<<<<<< }}}}}(#1253) <<<<<<<<<<< >>>>>> 8 >>>>>> (#1253)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[98]}} <.> ((*)) AST(variant,reference var) {{[112][114][111][116][111][116][121][112][101]}}} <.> ((*)) AST(variant,reference var) {{[108]}}}{ASSIGN_EQUAL(=)} {((*)) AST(function,function) {function()((*)) AST(block) {>>>>>> 0 >>>>>> (#1662)((@)) AST(statement,for stmt) {*FOR* (((*)) AST(expression,sequence expr) {[] (null)} *;* ((*)) AST(expression,binary expr) {[] (null)(PREC=2) ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[97]}}} {BOOL_AND(&&)} ((*)) AST(member ref,static member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[97]}}} <.> ((*)) AST(variant,reference var) {{[108][101][110][103][116][104]}}}} *;* (null) )((*)) AST(block) {>>>>>> 0 >>>>>> (#1794)((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[97]}}}} *=* ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[97]}}}}*} (#1794) <<<<<<<<<<< >>>>>> 1 >>>>>> (#1794)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[97]}}}{ASSIGN_EQUAL(=)} {((*)) AST(collection) {[]}}}}(#1794) <<<<<<<<<<< >>>>>> 2 >>>>>> (#1794)((@)) AST(statement,for stmt) {*FOR* (((*)) AST(expression,sequence expr) {[] (null)((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[98]}}}} *=* ((*)) AST(variant,numeric var) {{(I)0}}}} *;* ((*)) AST(expression,binary expr) {[] (null)(PREC=7) ((*)) AST(variant,reference var) {{[98]}} {LT(<)} ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[97]}} <.> ((*)) AST(variant,reference var) {{[108][101][110][103][116][104]}}}} *;* ((*)) AST(expression,unary expr) {{SELF_PLUS(++)} [] ((*)) AST(variant,reference var) {{[98]}}} )((*)) AST(block) {>>>>>> 0 >>>>>> (#1793)((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[99]}}}} *=* ((*)) AST(member ref,runtime member) {[] ((*)) AST(variant,reference var) {{[97]}}[((*)) AST(variant,reference var) {{[98]}}]}}*} (#1793) <<<<<<<<<<< >>>>>> 1 >>>>>> (#1793)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,runtime member) {[] ((*)) AST(variant,reference var) {{[97]}}[((*)) AST(variant,reference var) {{[98]}}]}{ASSIGN_EQUAL(=)} {((*)) AST(variant,special var) {{NULL}}}}}(#1793) <<<<<<<<<<< >>>>>> 2 >>>>>> (#1793)((@)) AST(statement,try-catch stmt) {*TRY*[] ((*)) AST(block) {>>>>>> 0 >>>>>> (#1773)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(variant,reference var) {{[99]}}()}} (#1773) <<<<<<<<<<< }*CATCH*((@)) AST(statement,catch clause) { *(* [] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[110]}}}} *)* ((*)) AST(block) {>>>>>> 0 >>>>>> (#1792)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[103]}}}(((*)) AST(variant,reference var) {{[110]}})}} (#1792) <<<<<<<<<<< }}*FINALLY*(null)}(#1793) <<<<<<<<<<< }}(#1794) <<<<<<<<<<< }} (#1662) <<<<<<<<<<< >>>>>> 1 >>>>>> (#1662)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[97]}}}{ASSIGN_EQUAL(=)} {((*)) AST(variant,special var) {{NULL}}}}}(#1662) <<<<<<<<<<< }}}}}(#1253) <<<<<<<<<<< >>>>>> 9 >>>>>> (#1253)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[98]}} <.> ((*)) AST(variant,reference var) {{[112][114][111][116][111][116][121][112][101]}}} <.> ((*)) AST(variant,reference var) {{[103]}}}{ASSIGN_EQUAL(=)} {((*)) AST(function,function) {function(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[97]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#1832)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[99]}}}(((*)) AST(function,function) {function()((*)) AST(block) {>>>>>> 0 >>>>>> (#1850)((@)) AST(statement,throw stmt) {*THROW*[] ((*)) AST(variant,reference var) {{[97]}}} (#1850) <<<<<<<<<<< }})}} (#1832) <<<<<<<<<<< }}}}}(#1253) <<<<<<<<<<< >>>>>> 10 >>>>>> (#1253)((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[102]}}}} *=* ((*)) AST(function,function) {function(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[97]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#1880)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[98]}}}{ASSIGN_EQUAL(=)} {((*)) AST(variant,numeric var) {{(I)0}}}}} (#1880) <<<<<<<<<<< >>>>>> 1 >>>>>> (#1880)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[99]}}}{ASSIGN_EQUAL(=)} {((*)) AST(expression,unary expr) {{void} [] ((*)) AST(variant,numeric var) {{(I)0}}}}}}(#1880) <<<<<<<<<<< >>>>>> 2 >>>>>> (#1880)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[97]}}}{ASSIGN_EQUAL(=)} {((*)) AST(collection) {[]}}}}(#1880) <<<<<<<<<<< >>>>>> 3 >>>>>> (#1880)((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[98]}}}} *=* ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[102]}}}()}}*}(#1880) <<<<<<<<<<< >>>>>> 4 >>>>>> (#1880)((@)) AST(statement,try-catch stmt) {*TRY*[] ((*)) AST(block) {>>>>>> 0 >>>>>> (#1955)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(variant,reference var) {{[97]}}(((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[98]}} <.> ((*)) AST(variant,reference var) {{[114][101][115][111][108][118][101]}}} <,> ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[98]}} <.> ((*)) AST(variant,reference var) {{[114][101][106][101][99][116]}}})}} (#1955) <<<<<<<<<<< }*CATCH*((@)) AST(statement,catch clause) { *(* [] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[108]}}}} *)* ((*)) AST(block) {>>>>>> 0 >>>>>> (#1976)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[98]}} <.> ((*)) AST(variant,reference var) {{[114][101][106][101][99][116]}}}(((*)) AST(variant,reference var) {{[108]}})}} (#1976) <<<<<<<<<<< }}*FINALLY*(null)}(#1880) <<<<<<<<<<< }}}*}(#1253) <<<<<<<<<<< >>>>>> 11 >>>>>> (#1253)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[102]}} <.> ((*)) AST(variant,reference var) {{[112][114][111][116][111][116][121][112][101]}}} <.> ((*)) AST(variant,reference var) {{[102]}}}{ASSIGN_EQUAL(=)} {((*)) AST(function,function) {function()((*)) AST(block) {>>>>>> 0 >>>>>> (#2002)((*)) AST(function,function) {function((*)) AST(variant,reference var) {{[97]}}(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[97]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#2016)((@)) AST(statement,return stmt) {*RETURN*[] ((*)) AST(function,function) {function(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[100]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#2035)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,binary expr) {[] (null)(PREC=1) ((*)) AST(variant,reference var) {{[99]}} {BOOL_OR(||)} ((*)) AST(expression,sequence expr) {[] (null)((*)) AST(expression,assignment expr) {[] ((*)) AST(variant,reference var) {{[99]}}{ASSIGN_EQUAL(=)} {((*)) AST(expression,unary expr) {{BOOL_NOT(!)} [] ((*)) AST(variant,numeric var) {{(I)0}}}}} <,> ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[97]}} <.> ((*)) AST(variant,reference var) {{[99][97][108][108]}}}(((*)) AST(variant,reference var) {{[98]}} <,> ((*)) AST(variant,reference var) {{[100]}})}}}} (#2035) <<<<<<<<<<< }}} (#2016) <<<<<<<<<<< }} (#2002) <<<<<<<<<<< >>>>>> 1 >>>>>> (#2002)((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[98]}}}} *=* ((*)) AST(variant,special var) {{this}}} <,> ((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[99]}}}} *=* ((*)) AST(expression,unary expr) {{BOOL_NOT(!)} [] ((*)) AST(variant,numeric var) {{(I)1}}}}*}(#2002) <<<<<<<<<<< >>>>>> 2 >>>>>> (#2002)((@)) AST(statement,return stmt) {*RETURN*[] ((*)) AST(object,general object) {{((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[114][101][115][111][108][118][101]}} <:> ((*)) AST(expression,call expr) {[] ((*)) AST(variant,reference var) {{[97]}}(((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[70]}}})}} <,> ((*)) AST(object,object init prop) {Runtime=0,Method=0,Shorthand=0((*)) AST(variant,reference var) {{[114][101][106][101][99][116]}} <:> ((*)) AST(expression,call expr) {[] ((*)) AST(variant,reference var) {{[97]}}(((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[103]}}})}}}}}(#2002) <<<<<<<<<<< }}}}}(#1253) <<<<<<<<<<< >>>>>> 12 >>>>>> (#1253)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[102]}} <.> ((*)) AST(variant,reference var) {{[112][114][111][116][111][116][121][112][101]}}} <.> ((*)) AST(variant,reference var) {{[70]}}}{ASSIGN_EQUAL(=)} {((*)) AST(function,function) {function(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[97]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#2144)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,conditional expr) {[] ((*)) AST(expression,binary expr) {[] (null)(PREC=6) ((*)) AST(variant,reference var) {{[97]}} {EQUAL_VT(===)} ((*)) AST(variant,special var) {{this}}} <?> ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[103]}}}(((*)) AST(expression,new expr) {[] ((*)) AST(variant,reference var) {{[84][121][112][101][69][114][114][111][114]}}(((*)) AST(variant,string var) {{[65][32][80][114][111][109][105][115][101][32][99][97][110][110][111][116][32][114][101][115][111][108][118][101][32][116][111][32][105][116][115][101][108][102]}})})} <:> ((*)) AST(expression,conditional expr) {[] ((*)) AST(expression,binary expr) {[] (null)(PREC=7) ((*)) AST(variant,reference var) {{[97]}} {INSTANCE_OF} ((*)) AST(variant,reference var) {{[102]}}} <?> ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[71]}}}(((*)) AST(variant,reference var) {{[97]}})} <:> ((*)) AST(expression,conditional expr) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(variant,reference var) {{[99]}}(((*)) AST(variant,reference var) {{[97]}})} <?> ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[67]}}}(((*)) AST(variant,reference var) {{[97]}})} <:> ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[108]}}}(((*)) AST(variant,reference var) {{[97]}})}}}}} (#2144) <<<<<<<<<<< }}}}}(#1253) <<<<<<<<<<< >>>>>> 13 >>>>>> (#1253)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[102]}} <.> ((*)) AST(variant,reference var) {{[112][114][111][116][111][116][121][112][101]}}} <.> ((*)) AST(variant,reference var) {{[67]}}}{ASSIGN_EQUAL(=)} {((*)) AST(function,function) {function(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[97]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#2291)((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[98]}}}} *=* ((*)) AST(expression,unary expr) {{void} [] ((*)) AST(variant,numeric var) {{(I)0}}}}*} (#2291) <<<<<<<<<<< >>>>>> 1 >>>>>> (#2291)((@)) AST(statement,try-catch stmt) {*TRY*[] ((*)) AST(block) {>>>>>> 0 >>>>>> (#2318)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(variant,reference var) {{[98]}}{ASSIGN_EQUAL(=)} {((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[97]}} <.> ((*)) AST(variant,reference var) {{[116][104][101][110]}}}}}} (#2318) <<<<<<<<<<< }*CATCH*((@)) AST(statement,catch clause) { *(* [] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[108]}}}} *)* ((*)) AST(block) {>>>>>> 0 >>>>>> (#2344)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[103]}}}(((*)) AST(variant,reference var) {{[108]}})}} (#2344) <<<<<<<<<<< >>>>>> 1 >>>>>> (#2344)((@)) AST(statement,return stmt) {*RETURN*[] (null)}(#2344) <<<<<<<<<<< }}*FINALLY*(null)}(#2291) <<<<<<<<<<< >>>>>> 2 >>>>>> (#2291)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,conditional expr) {[] ((*)) AST(expression,binary expr) {[] (null)(PREC=6) ((*)) AST(expression,unary expr) {{typeof} [] ((*)) AST(variant,reference var) {{[98]}}} {EQUAL_V(==)} ((*)) AST(variant,reference var) {{[109]}}} <?> ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[72]}}}(((*)) AST(variant,reference var) {{[98]}} <,> ((*)) AST(variant,reference var) {{[97]}})} <:> ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[108]}}}(((*)) AST(variant,reference var) {{[97]}})}}}(#2291) <<<<<<<<<<< }}}}}(#1253) <<<<<<<<<<< >>>>>> 14 >>>>>> (#1253)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[102]}} <.> ((*)) AST(variant,reference var) {{[112][114][111][116][111][116][121][112][101]}}} <.> ((*)) AST(variant,reference var) {{[103]}}}{ASSIGN_EQUAL(=)} {((*)) AST(function,function) {function(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[97]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#2404)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[111]}}}(((*)) AST(variant,numeric var) {{(I)2}} <,> ((*)) AST(variant,reference var) {{[97]}})}} (#2404) <<<<<<<<<<< }}}}}(#1253) <<<<<<<<<<< >>>>>> 15 >>>>>> (#1253)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[102]}} <.> ((*)) AST(variant,reference var) {{[112][114][111][116][111][116][121][112][101]}}} <.> ((*)) AST(variant,reference var) {{[108]}}}{ASSIGN_EQUAL(=)} {((*)) AST(function,function) {function(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[97]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#2443)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[111]}}}(((*)) AST(variant,numeric var) {{(I)1}} <,> ((*)) AST(variant,reference var) {{[97]}})}} (#2443) <<<<<<<<<<< }}}}}(#1253) <<<<<<<<<<< >>>>>> 16 >>>>>> (#1253)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[102]}} <.> ((*)) AST(variant,reference var) {{[112][114][111][116][111][116][121][112][101]}}} <.> ((*)) AST(variant,reference var) {{[111]}}}{ASSIGN_EQUAL(=)} {((*)) AST(function,function) {function(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[97]}}}} <,> ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[98]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#2484)((@)) AST(statement,if-else stmt) {*IF*[] ((*)) AST(expression,binary expr) {[] (null)(PREC=6) ((*)) AST(variant,numeric var) {{(I)0}} {NOT_EQUAL_V(!=)} ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[98]}}}}*TRUE_BLOCK*((@)) AST(statement,throw stmt) {*THROW*[] ((*)) AST(expression,call expr) {[] ((*)) AST(variant,reference var) {{[69][114][114][111][114]}}(((*)) AST(expression,binary expr) {[] (null)(PREC=9) ((*)) AST(expression,binary expr) {[] (null)(PREC=9) ((*)) AST(expression,binary expr) {[] (null)(PREC=9) ((*)) AST(expression,binary expr) {[] (null)(PREC=9) ((*)) AST(expression,binary expr) {[] (null)(PREC=9) ((*)) AST(variant,string var) {{[67][97][110][110][111][116][32][115][101][116][116][108][101][40]}} {PLUS(+)} ((*)) AST(variant,reference var) {{[97]}}} {PLUS(+)} ((*)) AST(variant,string var) {{[44][32]}}} {PLUS(+)} ((*)) AST(variant,reference var) {{[98]}}} {PLUS(+)} ((*)) AST(variant,string var) {{[41][58][32][80][114][111][109][105][115][101][32][97][108][114][101][97][100][121][32][115][101][116][116][108][101][100][32][105][110][32][115][116][97][116][101]}}} {PLUS(+)} ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[98]}}}})}}*FALSE_BLOCK*(null)} (#2484) <<<<<<<<<<< >>>>>> 1 >>>>>> (#2484)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[98]}}}{ASSIGN_EQUAL(=)} {((*)) AST(variant,reference var) {{[97]}}}}}(#2484) <<<<<<<<<<< >>>>>> 2 >>>>>> (#2484)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[99]}}}{ASSIGN_EQUAL(=)} {((*)) AST(variant,reference var) {{[98]}}}}}(#2484) <<<<<<<<<<< >>>>>> 3 >>>>>> (#2484)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[65]}}}()}}(#2484) <<<<<<<<<<< }}}}}(#1253) <<<<<<<<<<< >>>>>> 17 >>>>>> (#1253)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[102]}} <.> ((*)) AST(variant,reference var) {{[112][114][111][116][111][116][121][112][101]}}} <.> ((*)) AST(variant,reference var) {{[65]}}}{ASSIGN_EQUAL(=)} {((*)) AST(function,function) {function()((*)) AST(block) {>>>>>> 0 >>>>>> (#2634)((@)) AST(statement,if-else stmt) {*IF*[] ((*)) AST(expression,binary expr) {[] (null)(PREC=6) ((*)) AST(variant,special var) {{NULL}} {NOT_EQUAL_V(!=)} ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[97]}}}}*TRUE_BLOCK*((*)) AST(block) {>>>>>> 0 >>>>>> (#2711)((@)) AST(statement,for stmt) {*FOR* (((*)) AST(expression,sequence expr) {[] (null)((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[97]}}}} *=* ((*)) AST(variant,numeric var) {{(I)0}}}} *;* ((*)) AST(expression,binary expr) {[] (null)(PREC=7) ((*)) AST(variant,reference var) {{[97]}} {LT(<)} ((*)) AST(member ref,static member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[97]}}} <.> ((*)) AST(variant,reference var) {{[108][101][110][103][116][104]}}}} *;* ((*)) AST(expression,unary expr) {{SELF_PLUS(++)} [] ((*)) AST(variant,reference var) {{[97]}}} )((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[103]}} <.> ((*)) AST(variant,reference var) {{[98]}}}(((*)) AST(member ref,runtime member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[97]}}}[((*)) AST(variant,reference var) {{[97]}}]})}}} (#2711) <<<<<<<<<<< >>>>>> 1 >>>>>> (#2711)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[97]}}}{ASSIGN_EQUAL(=)} {((*)) AST(variant,special var) {{NULL}}}}}(#2711) <<<<<<<<<<< }*FALSE_BLOCK*(null)} (#2634) <<<<<<<<<<< }}}}}(#1253) <<<<<<<<<<< >>>>>> 18 >>>>>> (#1253)((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[103]}}}} *=* ((*)) AST(expression,new expr) {[] ((*)) AST(variant,reference var) {{[98]}}()}}*}(#1253) <<<<<<<<<<< >>>>>> 19 >>>>>> (#1253)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[102]}} <.> ((*)) AST(variant,reference var) {{[112][114][111][116][111][116][121][112][101]}}} <.> ((*)) AST(variant,reference var) {{[71]}}}{ASSIGN_EQUAL(=)} {((*)) AST(function,function) {function(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[97]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#2750)((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[98]}}}} *=* ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[102]}}}()}}*} (#2750) <<<<<<<<<<< >>>>>> 1 >>>>>> (#2750)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[97]}} <.> ((*)) AST(variant,reference var) {{[72][97]}}}(((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[98]}} <.> ((*)) AST(variant,reference var) {{[114][101][115][111][108][118][101]}}} <,> ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[98]}} <.> ((*)) AST(variant,reference var) {{[114][101][106][101][99][116]}}})}}(#2750) <<<<<<<<<<< }}}}}(#1253) <<<<<<<<<<< >>>>>> 20 >>>>>> (#1253)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[102]}} <.> ((*)) AST(variant,reference var) {{[112][114][111][116][111][116][121][112][101]}}} <.> ((*)) AST(variant,reference var) {{[72]}}}{ASSIGN_EQUAL(=)} {((*)) AST(function,function) {function(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[97]}}}} <,> ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[98]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#2820)((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[99]}}}} *=* ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[102]}}}()}}*} (#2820) <<<<<<<<<<< >>>>>> 1 >>>>>> (#2820)((@)) AST(statement,try-catch stmt) {*TRY*[] ((*)) AST(block) {>>>>>> 0 >>>>>> (#2869)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[97]}} <.> ((*)) AST(variant,reference var) {{[99][97][108][108]}}}(((*)) AST(variant,reference var) {{[98]}} <,> ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[99]}} <.> ((*)) AST(variant,reference var) {{[114][101][115][111][108][118][101]}}} <,> ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[99]}} <.> ((*)) AST(variant,reference var) {{[114][101][106][101][99][116]}}})}} (#2869) <<<<<<<<<<< }*CATCH*((@)) AST(statement,catch clause) { *(* [] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[110]}}}} *)* ((*)) AST(block) {>>>>>> 0 >>>>>> (#2890)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[99]}} <.> ((*)) AST(variant,reference var) {{[114][101][106][101][99][116]}}}(((*)) AST(variant,reference var) {{[110]}})}} (#2890) <<<<<<<<<<< }}*FINALLY*(null)}(#2820) <<<<<<<<<<< }}}}}(#1253) <<<<<<<<<<< >>>>>> 21 >>>>>> (#1253)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[102]}} <.> ((*)) AST(variant,reference var) {{[112][114][111][116][111][116][121][112][101]}}} <.> ((*)) AST(variant,reference var) {{[116][104][101][110]}}}{ASSIGN_EQUAL(=)} {((*)) AST(function,function) {function(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[97]}}}} <,> ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[98]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#2922)((*)) AST(function,function) {function((*)) AST(variant,reference var) {{[99]}}(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[97]}}}} <,> ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[98]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#2938)((@)) AST(statement,return stmt) {*RETURN*[] ((*)) AST(expression,conditional expr) {[] ((*)) AST(expression,binary expr) {[] (null)(PREC=6) ((*)) AST(expression,unary expr) {{typeof} [] ((*)) AST(variant,reference var) {{[97]}}} {EQUAL_V(==)} ((*)) AST(variant,reference var) {{[109]}}} <?> ((*)) AST(function,function) {function(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[98]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#2969)((@)) AST(statement,try-catch stmt) {*TRY*[] ((*)) AST(block) {>>>>>> 0 >>>>>> (#2982)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(variant,reference var) {{[100]}}(((*)) AST(expression,call expr) {[] ((*)) AST(variant,reference var) {{[97]}}(((*)) AST(variant,reference var) {{[98]}})})}} (#2982) <<<<<<<<<<< }*CATCH*((@)) AST(statement,catch clause) { *(* [] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[113][98]}}}} *)* ((*)) AST(block) {>>>>>> 0 >>>>>> (#2998)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(variant,reference var) {{[101]}}(((*)) AST(variant,reference var) {{[113][98]}})}} (#2998) <<<<<<<<<<< }}*FINALLY*(null)} (#2969) <<<<<<<<<<< }} <:> ((*)) AST(variant,reference var) {{[98]}}}} (#2938) <<<<<<<<<<< }} (#2922) <<<<<<<<<<< >>>>>> 1 >>>>>> (#2922)((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[100]}}}}} <,> ((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[101]}}}}} <,> ((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[103]}}}} *=* ((*)) AST(expression,new expr) {[] ((*)) AST(variant,reference var) {{[102]}}(((*)) AST(function,function) {function(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[97]}}}} <,> ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[98]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#3031)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(variant,reference var) {{[100]}}{ASSIGN_EQUAL(=)} {((*)) AST(variant,reference var) {{[97]}}}}} (#3031) <<<<<<<<<<< >>>>>> 1 >>>>>> (#3031)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(variant,reference var) {{[101]}}{ASSIGN_EQUAL(=)} {((*)) AST(variant,reference var) {{[98]}}}}}(#3031) <<<<<<<<<<< }})}}*}(#2922) <<<<<<<<<<< >>>>>> 2 >>>>>> (#2922)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[72][97]}}}(((*)) AST(expression,call expr) {[] ((*)) AST(variant,reference var) {{[99]}}(((*)) AST(variant,reference var) {{[97]}} <,> ((*)) AST(variant,reference var) {{[100]}})} <,> ((*)) AST(expression,call expr) {[] ((*)) AST(variant,reference var) {{[99]}}(((*)) AST(variant,reference var) {{[98]}} <,> ((*)) AST(variant,reference var) {{[101]}})})}}(#2922) <<<<<<<<<<< >>>>>> 3 >>>>>> (#2922)((@)) AST(statement,return stmt) {*RETURN*[] ((*)) AST(variant,reference var) {{[103]}}}(#2922) <<<<<<<<<<< }}}}}(#1253) <<<<<<<<<<< >>>>>> 22 >>>>>> (#1253)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[102]}} <.> ((*)) AST(variant,reference var) {{[112][114][111][116][111][116][121][112][101]}}} <.> ((*)) AST(variant,reference var) {{[99][97][116][99][104]}}}{ASSIGN_EQUAL(=)} {((*)) AST(function,function) {function(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[97]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#3104)((@)) AST(statement,return stmt) {*RETURN*[] ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[116][104][101][110]}}}(((*)) AST(expression,unary expr) {{void} [] ((*)) AST(variant,numeric var) {{(I)0}}} <,> ((*)) AST(variant,reference var) {{[97]}})}} (#3104) <<<<<<<<<<< }}}}}(#1253) <<<<<<<<<<< >>>>>> 23 >>>>>> (#1253)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[102]}} <.> ((*)) AST(variant,reference var) {{[112][114][111][116][111][116][121][112][101]}}} <.> ((*)) AST(variant,reference var) {{[72][97]}}}{ASSIGN_EQUAL(=)} {((*)) AST(function,function) {function(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[97]}}}} <,> ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[98]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#3161)((*)) AST(function,function) {function((*)) AST(variant,reference var) {{[99]}}()((*)) AST(block) {>>>>>> 0 >>>>>> (#3174)((@)) AST(statement,switch stmt) {*SWITCH*[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[100]}} <.> ((*)) AST(variant,reference var) {{[98]}}}{((@)) AST(statement,case clause) {*CASE*[] ((*)) AST(variant,numeric var) {{(I)1}} *:* {((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(variant,reference var) {{[97]}}(((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[100]}} <.> ((*)) AST(variant,reference var) {{[99]}}})}} <,> ((@)) AST(statement,break stmt) {[] (null)}}};((@)) AST(statement,case clause) {*CASE*[] ((*)) AST(variant,numeric var) {{(I)2}} *:* {((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(variant,reference var) {{[98]}}(((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[100]}} <.> ((*)) AST(variant,reference var) {{[99]}}})}} <,> ((@)) AST(statement,break stmt) {[] (null)}}};((@)) AST(statement,case clause) {*DEFAULT:*{((@)) AST(statement,throw stmt) {*THROW*[] ((*)) AST(expression,call expr) {[] ((*)) AST(variant,reference var) {{[69][114][114][111][114]}}(((*)) AST(expression,binary expr) {[] (null)(PREC=9) ((*)) AST(variant,string var) {{[85][110][101][120][112][101][99][116][101][100][32][115][116][97][116][101][58][32]}} {PLUS(+)} ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[100]}} <.> ((*)) AST(variant,reference var) {{[98]}}}})}}}}}} (#3174) <<<<<<<<<<< }} (#3161) <<<<<<<<<<< >>>>>> 1 >>>>>> (#3161)((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[100]}}}} *=* ((*)) AST(variant,special var) {{this}}}*}(#3161) <<<<<<<<<<< >>>>>> 2 >>>>>> (#3161)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,conditional expr) {[] ((*)) AST(expression,binary expr) {[] (null)(PREC=6) ((*)) AST(variant,special var) {{NULL}} {EQUAL_V(==)} ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[97]}}}} <?> ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[103]}} <.> ((*)) AST(variant,reference var) {{[98]}}}(((*)) AST(variant,reference var) {{[99]}})} <:> ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,special var) {{this}} <.> ((*)) AST(variant,reference var) {{[97]}}} <.> ((*)) AST(variant,reference var) {{[112][117][115][104]}}}(((*)) AST(variant,reference var) {{[99]}})}}}(#3161) <<<<<<<<<<< }}}}}(#1253) <<<<<<<<<<< >>>>>> 24 >>>>>> (#1253)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[102]}} <.> ((*)) AST(variant,reference var) {{[114][101][115][111][108][118][101]}}}{ASSIGN_EQUAL(=)} {((*)) AST(variant,reference var) {{[100]}}}}}(#1253) <<<<<<<<<<< >>>>>> 25 >>>>>> (#1253)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[102]}} <.> ((*)) AST(variant,reference var) {{[114][101][106][101][99][116]}}}{ASSIGN_EQUAL(=)} {((*)) AST(function,function) {function(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[97]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#3355)((@)) AST(statement,return stmt) {*RETURN*[] ((*)) AST(expression,new expr) {[] ((*)) AST(variant,reference var) {{[102]}}(((*)) AST(function,function) {function(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[98]}}}} <,> ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[99]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#3382)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(variant,reference var) {{[99]}}(((*)) AST(variant,reference var) {{[97]}})}} (#3382) <<<<<<<<<<< }})}} (#3355) <<<<<<<<<<< }}}}}(#1253) <<<<<<<<<<< >>>>>> 26 >>>>>> (#1253)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[102]}} <.> ((*)) AST(variant,reference var) {{[114][97][99][101]}}}{ASSIGN_EQUAL(=)} {((*)) AST(function,function) {function(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[97]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#3409)((@)) AST(statement,return stmt) {*RETURN*[] ((*)) AST(expression,new expr) {[] ((*)) AST(variant,reference var) {{[102]}}(((*)) AST(function,function) {function(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[98]}}}} <,> ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[99]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#3436)((@)) AST(statement,for stmt) {*FOR* (((*)) AST(expression,sequence expr) {[] (null)((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[101]}}}} *=* ((*)) AST(expression,call expr) {[] ((*)) AST(variant,reference var) {{[99][100]}}(((*)) AST(variant,reference var) {{[97]}})}} <,> ((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[102]}}}} *=* ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[101]}} <.> ((*)) AST(variant,reference var) {{[110][101][120][116]}}}()}}} *;* ((*)) AST(expression,unary expr) {{BOOL_NOT(!)} [] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[102]}} <.> ((*)) AST(variant,reference var) {{[100][111][110][101]}}}} *;* ((*)) AST(expression,assignment expr) {[] ((*)) AST(variant,reference var) {{[102]}}{ASSIGN_EQUAL(=)} {((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[101]}} <.> ((*)) AST(variant,reference var) {{[110][101][120][116]}}}()}}} )((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(variant,reference var) {{[100]}}(((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[102]}} <.> ((*)) AST(variant,reference var) {{[118][97][108][117][101]}}})} <.> ((*)) AST(variant,reference var) {{[72][97]}}}(((*)) AST(variant,reference var) {{[98]}} <,> ((*)) AST(variant,reference var) {{[99]}})}}} (#3436) <<<<<<<<<<< }})}} (#3409) <<<<<<<<<<< }}}}}(#1253) <<<<<<<<<<< >>>>>> 27 >>>>>> (#1253)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[102]}} <.> ((*)) AST(variant,reference var) {{[97][108][108]}}}{ASSIGN_EQUAL(=)} {((*)) AST(function,function) {function(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[97]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#3522)((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[98]}}}} *=* ((*)) AST(expression,call expr) {[] ((*)) AST(variant,reference var) {{[99][100]}}(((*)) AST(variant,reference var) {{[97]}})}} <,> ((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[99]}}}} *=* ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[98]}} <.> ((*)) AST(variant,reference var) {{[110][101][120][116]}}}()}}*} (#3522) <<<<<<<<<<< >>>>>> 1 >>>>>> (#3522)((@)) AST(statement,return stmt) {*RETURN*[] ((*)) AST(expression,conditional expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[99]}} <.> ((*)) AST(variant,reference var) {{[100][111][110][101]}}} <?> ((*)) AST(expression,call expr) {[] ((*)) AST(variant,reference var) {{[100]}}(((*)) AST(collection) {[]})} <:> ((*)) AST(expression,new expr) {[] ((*)) AST(variant,reference var) {{[102]}}(((*)) AST(function,function) {function(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[97]}}}} <,> ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[101]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#3585)((*)) AST(function,function) {function((*)) AST(variant,reference var) {{[102]}}(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[98]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#3599)((@)) AST(statement,return stmt) {*RETURN*[] ((*)) AST(function,function) {function(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[99]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#3618)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,runtime member) {[] ((*)) AST(variant,reference var) {{[103]}}[((*)) AST(variant,reference var) {{[98]}}]}{ASSIGN_EQUAL(=)} {((*)) AST(variant,reference var) {{[99]}}}}} (#3618) <<<<<<<<<<< >>>>>> 1 >>>>>> (#3618)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,postfix expr) {[] ((*)) AST(variant,reference var) {{[104]}}{SELF_MINUS(--)}}}(#3618) <<<<<<<<<<< >>>>>> 2 >>>>>> (#3618)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,binary expr) {[] (null)(PREC=2) ((*)) AST(expression,binary expr) {[] (null)(PREC=6) ((*)) AST(variant,numeric var) {{(I)0}} {EQUAL_V(==)} ((*)) AST(variant,reference var) {{[104]}}} {BOOL_AND(&&)} ((*)) AST(expression,call expr) {[] ((*)) AST(variant,reference var) {{[97]}}(((*)) AST(variant,reference var) {{[103]}})}}}(#3618) <<<<<<<<<<< }}} (#3599) <<<<<<<<<<< }} (#3585) <<<<<<<<<<< >>>>>> 1 >>>>>> (#3585)((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[103]}}}} *=* ((*)) AST(collection) {[]}} <,> ((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[104]}}}} *=* ((*)) AST(variant,numeric var) {{(I)0}}}*}(#3585) <<<<<<<<<<< >>>>>> 2 >>>>>> (#3585)((@)) AST(statement,do-while stmt) {*DO*((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,sequence expr) {[] (null)((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[103]}} <.> ((*)) AST(variant,reference var) {{[112][117][115][104]}}}(((*)) AST(expression,unary expr) {{void} [] ((*)) AST(variant,numeric var) {{(I)0}}})} <,> ((*)) AST(expression,postfix expr) {[] ((*)) AST(variant,reference var) {{[104]}}{SELF_PLUS(++)}} <,> ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(variant,reference var) {{[100]}}(((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[99]}} <.> ((*)) AST(variant,reference var) {{[118][97][108][117][101]}}})} <.> ((*)) AST(variant,reference var) {{[72][97]}}}(((*)) AST(expression,call expr) {[] ((*)) AST(variant,reference var) {{[102]}}(((*)) AST(expression,binary expr) {[] (null)(PREC=9) ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[103]}} <.> ((*)) AST(variant,reference var) {{[108][101][110][103][116][104]}}} {MINUS(-)} ((*)) AST(variant,numeric var) {{(I)1}}})} <,> ((*)) AST(variant,reference var) {{[101]}})} <,> ((*)) AST(expression,assignment expr) {[] ((*)) AST(variant,reference var) {{[99]}}{ASSIGN_EQUAL(=)} {((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[98]}} <.> ((*)) AST(variant,reference var) {{[110][101][120][116]}}}()}}}}}*WHILE* (((*)) AST(expression,unary expr) {{BOOL_NOT(!)} [] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[99]}} <.> ((*)) AST(variant,reference var) {{[100][111][110][101]}}}})}(#3585) <<<<<<<<<<< }})}}}(#3522) <<<<<<<<<<< }}}}}(#1253) <<<<<<<<<<< >>>>>> 28 >>>>>> (#1253)((@)) AST(statement,return stmt) {*RETURN*[] ((*)) AST(variant,reference var) {{[102]}}}(#1253) <<<<<<<<<<< }})}}
########################
##### Parse Result #####
((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[102]}} <.> ((*)) AST(variant,reference var) {{[97][108][108]}}}{ASSIGN_EQUAL(=)} {((*)) AST(function,function) {function(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[97]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#17)((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[98]}}}} *=* ((*)) AST(expression,call expr) {[] ((*)) AST(variant,reference var) {{[99][100]}}(((*)) AST(variant,reference var) {{[97]}})}} <,> ((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[99]}}}} *=* ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[98]}} <.> ((*)) AST(variant,reference var) {{[110][101][120][116]}}}()}}*} (#17) <<<<<<<<<<< >>>>>> 1 >>>>>> (#17)((@)) AST(statement,return stmt) {*RETURN*[] ((*)) AST(expression,conditional expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[99]}} <.> ((*)) AST(variant,reference var) {{[100][111][110][101]}}} <?> ((*)) AST(expression,call expr) {[] ((*)) AST(variant,reference var) {{[100]}}(((*)) AST(collection) {[]})} <:> ((*)) AST(expression,new expr) {[] ((*)) AST(variant,reference var) {{[102]}}(((*)) AST(function,function) {function(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[97]}}}} <,> ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[101]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#89)((*)) AST(function,function) {function((*)) AST(variant,reference var) {{[102]}}(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[98]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#108)((@)) AST(statement,return stmt) {*RETURN*[] ((*)) AST(function,function) {function(((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[99]}}}})((*)) AST(block) {>>>>>> 0 >>>>>> (#134)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,assignment expr) {[] ((*)) AST(member ref,runtime member) {[] ((*)) AST(variant,reference var) {{[103]}}[((*)) AST(variant,reference var) {{[98]}}]}{ASSIGN_EQUAL(=)} {((*)) AST(variant,reference var) {{[99]}}}}} (#134) <<<<<<<<<<< >>>>>> 1 >>>>>> (#134)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,postfix expr) {[] ((*)) AST(variant,reference var) {{[104]}}{SELF_MINUS(--)}}}(#134) <<<<<<<<<<< >>>>>> 2 >>>>>> (#134)((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,binary expr) {[] (null)(PREC=2) ((*)) AST(expression,binary expr) {[] (null)(PREC=6) ((*)) AST(variant,numeric var) {{(I)0}} {EQUAL_V(==)} ((*)) AST(variant,reference var) {{[104]}}} {BOOL_AND(&&)} ((*)) AST(expression,call expr) {[] ((*)) AST(variant,reference var) {{[97]}}(((*)) AST(variant,reference var) {{[103]}})}}}(#134) <<<<<<<<<<< }}} (#108) <<<<<<<<<<< }} (#89) <<<<<<<<<<< >>>>>> 1 >>>>>> (#89)((@)) AST(statement,var decl list) {*VAR**((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[103]}}}} *=* ((*)) AST(collection) {[]}} <,> ((*)) AST(expression,var decl) {[] ((*)) AST(function,id param) {{((*)) AST(variant,reference var) {{[104]}}}} *=* ((*)) AST(variant,numeric var) {{(I)0}}}*}(#89) <<<<<<<<<<< >>>>>> 2 >>>>>> (#89)((@)) AST(statement,do-while stmt) {*DO*((@)) AST(statement,expr stmt) {[] ((*)) AST(expression,sequence expr) {[] (null)((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[103]}} <.> ((*)) AST(variant,reference var) {{[112][117][115][104]}}}(((*)) AST(expression,unary expr) {{void} [] ((*)) AST(variant,numeric var) {{(I)0}}})} <,> ((*)) AST(expression,postfix expr) {[] ((*)) AST(variant,reference var) {{[104]}}{SELF_PLUS(++)}} <,> ((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(expression,call expr) {[] ((*)) AST(variant,reference var) {{[100]}}(((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[99]}} <.> ((*)) AST(variant,reference var) {{[118][97][108][117][101]}}})} <.> ((*)) AST(variant,reference var) {{[72][97]}}}(((*)) AST(expression,call expr) {[] ((*)) AST(variant,reference var) {{[102]}}(((*)) AST(expression,binary expr) {[] (null)(PREC=9) ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[103]}} <.> ((*)) AST(variant,reference var) {{[108][101][110][103][116][104]}}} {MINUS(-)} ((*)) AST(variant,numeric var) {{(I)1}}})} <,> ((*)) AST(variant,reference var) {{[101]}})} <,> ((*)) AST(expression,assignment expr) {[] ((*)) AST(variant,reference var) {{[99]}}{ASSIGN_EQUAL(=)} {((*)) AST(expression,call expr) {[] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[98]}} <.> ((*)) AST(variant,reference var) {{[110][101][120][116]}}}()}}}}}*WHILE* (((*)) AST(expression,unary expr) {{BOOL_NOT(!)} [] ((*)) AST(member ref,static member) {[] ((*)) AST(variant,reference var) {{[99]}} <.> ((*)) AST(variant,reference var) {{[100][111][110][101]}}}})}(#89) <<<<<<<<<<< }})}}}(#17) <<<<<<<<<<< }}}}}
########################
